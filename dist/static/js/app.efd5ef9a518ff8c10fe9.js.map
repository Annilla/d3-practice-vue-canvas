{"version":3,"sources":["webpack:///./src/App.vue?a5ed","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/components/HelloWorld.vue?4290","webpack:///./src/components/HelloWorld.vue","webpack:///src/components/LineChart.vue","webpack:///./src/components/LineChart.vue?b347","webpack:///./src/components/LineChart.vue","webpack:///src/components/BarPChart.vue","webpack:///./src/components/BarPChart.vue?e4e5","webpack:///./src/components/BarPChart.vue","webpack:///src/components/BarVChart.vue","webpack:///./src/components/BarVChart.vue?0f50","webpack:///./src/components/BarVChart.vue","webpack:///src/components/DonutChart.vue","webpack:///./src/components/DonutChart.vue?1589","webpack:///./src/components/DonutChart.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","ssrContext","components_HelloWorld","staticClass","to","name","_v","src_components_HelloWorld","HelloWorld_normalizeComponent","LineChart","undefined","chart","height","paddingTop","paddingBottom","width","paddingLeft","paddingRight","conRate","conWidth","conHeight","d3","domain","data","value","length","range","chartWidth","Ymax","number","newArray","chartHeight","array","arrayset","_this","x","d","i","chartLeft","y","chartTop","_this2","context","ctxA","randomData","canvas","canvasA","offsetWidth","append","attr","customBase","_this3","custom","call","yAxis","selectAll","dataArray","enter","dots","dotIndex","nameIndex","drawCanvas","_this4","beginPath","moveTo","xScale","lineTo","stroke","fillText","month","save","arc","index","Math","PI","fill","closePath","el","restore","yPos","node","property","elapsed","e","_this5","getTotalLength","totalLength","t","Number","stop","random","initCanvas","_this6","getBoundingClientRect","left","top","document","querySelector","setAttribute","mouseX","mouseY","innerHTML","components_LineChart","_vm","version","class","tooltip","hidden","hideTooltip","on","click","src_components_LineChart","LineChart_normalizeComponent","BarPChart","Xmax","tickNum","valueLength","yScale","ticks","tickFormat","tickLabels","xAxis","bars","color","barWidth","xPos","rect","components_BarPChart","src_components_BarPChart","BarPChart_normalizeComponent","BarVChart","gap","chartGap","arr","barCount","floor","components_BarVChart","src_components_BarVChart","BarVChart_normalizeComponent","DonutChart","outerRadius","innerRadius","radius","sum","afterPer","totalSum","sort","startAngle","endAngle","newRandom","percentage","cssText","circum","dash","clientY","pie","components_DonutChart","viewBox","preserveAspectRatio","_l","c","key","ref","refInFor","r","cx","cy","stroke-width","stroke-dashoffset","offset","p","transform","mouseover","$event","showTooltip","mouseout","hiddenTooltip","text-anchor","_s","style","donut","src_components_DonutChart","DonutChart_normalizeComponent","vue_esm","use","vue_router_esm","router","mode","fallback","routes","path","component","redirect","config","productionTip","components","App","template"],"mappings":"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","file":"static/js/app.efd5ef9a518ff8c10fe9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6263de80\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6263de80\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6263de80\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <!-- <img src=\"./assets/logo.png\"> -->\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('ul',[_c('li',[_c('router-link',{attrs:{\"to\":{ name: 'LineChart' }}},[_vm._v(\"折線圖\")])],1),_vm._v(\" \"),_c('li',[_c('router-link',{attrs:{\"to\":{ name: 'BarPChart' }}},[_vm._v(\"橫條圖\")])],1),_vm._v(\" \"),_c('li',[_c('router-link',{attrs:{\"to\":{ name: 'BarVChart' }}},[_vm._v(\"直條圖\")])],1)])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-f50412f4\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f50412f4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./HelloWorld.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-f50412f4\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./HelloWorld.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"lineChart\">\r\n    <h1>折線圖</h1>\r\n    <div class=\"detail\">高雄市不動產買賣統計(104年6-10月)</div>\r\n    <!-- 圖表 -->\r\n    <div class=\"chartContain\">\r\n      <svg version=\"1.1\" id=\"calPath\"><path d=\"\"></path></svg>\r\n      <div :class=\"{ tooltip: true, hidden: hideTooltip}\">\r\n        <div class=\"name\">左營區 / 10月</div>\r\n        <div class=\"value\">214 件</div>\r\n      </div>\r\n    </div>\r\n    <button @click=\"randomData\">隨機資料</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [], // From randomData()\r\n      chart: {\r\n        width: 500,\r\n        height: 500,\r\n        paddingTop: 30,\r\n        paddingRight: 30,\r\n        paddingBottom: 100,\r\n        paddingLeft: 60\r\n      },\r\n      hideTooltip: true,\r\n      conWidth: 0, // Get Container Width\r\n      canvas: undefined, // For D3 Draw Canvas\r\n      ctx: undefined, // Set Canvas 2D\r\n      canvasA: undefined, // For D3 Draw Canvas Animate\r\n      ctxA: undefined, // Set Canvas 2D Animate\r\n      customBase: undefined, // This is the parent of all other elements\r\n      custom: undefined,\r\n      yTick: undefined, // Y軸 tick\r\n      dots: undefined, // 折點\r\n      lines: undefined, // 折線\r\n      timer: undefined // For Animation Timer\r\n    };\r\n  },\r\n  computed: {\r\n    // Caculate Container Height/Width Ratio\r\n    conRate() {\r\n      return (\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom) /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Container Height\r\n    conHeight() {\r\n      return this.conWidth * this.conRate;\r\n    },\r\n    // Caculate Chart Width\r\n    chartWidth() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.width /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Chart Height\r\n    chartHeight() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.height /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartTop() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.paddingTop /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartLeft() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.paddingLeft /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // X軸線性比例縮放\r\n    xScale() {\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([0, this.data[0].value.length])\r\n        .range([0, this.chartWidth]);\r\n    },\r\n    // Y軸線性比例縮放\r\n    yScale() {\r\n      let Ymin = 0;\r\n      let Ymax;\r\n      let newArray = [];\r\n\r\n      this.data.forEach(function(e, i) {\r\n        e.value.forEach(function(ev) {\r\n          newArray.push(ev.number);\r\n        });\r\n      });\r\n      Ymax = d3.max(newArray);\r\n\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([Ymin, Ymax])\r\n        .range([this.chartHeight, 0]);\r\n    },\r\n    // Y軸設定\r\n    yAxis() {\r\n      return d3.axisLeft(this.yScale).tickSizeInner(-this.chart.height);\r\n    },\r\n    // 顏色函數\r\n    color() {\r\n      return d3.scaleOrdinal(d3.schemeCategory10);\r\n    },\r\n    // 資料轉成陣列給之後畫線用\r\n    dataArray() {\r\n      let arrayset = [];\r\n\r\n      this.data.forEach(function(e, i) {\r\n        let array = [];\r\n\r\n        e.value.forEach(function(ev) {\r\n          array.push(ev.number);\r\n        });\r\n\r\n        arrayset.push(array);\r\n      });\r\n\r\n      return arrayset;\r\n    },\r\n    // 畫線函數\r\n    line() {\r\n      return d3\r\n        .line()\r\n        .x((d, i) => {\r\n          //利用尺度運算資料索引，傳回x的位置\r\n          return this.xScale(i + 1) + this.chartLeft;\r\n        })\r\n        .y(d => {\r\n          //利用尺度運算資料的值，傳回y的位置\r\n          return this.yScale(d) + this.chartTop;\r\n        });\r\n    },\r\n    // 畫線函數 Canvas\r\n    lineCanvas() {\r\n      return d3\r\n        .line()\r\n        .x((d, i) => {\r\n          //利用尺度運算資料索引，傳回x的位置\r\n          return this.xScale(i + 1) + this.chartLeft;\r\n        })\r\n        .y(d => {\r\n          //利用尺度運算資料的值，傳回y的位置\r\n          return this.yScale(d) + this.chartTop;\r\n        })\r\n        .context(this.ctxA);\r\n    }\r\n  },\r\n  mounted() {\r\n    // 隨機產生資料\r\n    this.randomData();\r\n  },\r\n  methods: {\r\n    initCanvas() {\r\n      let chartContain = document.querySelector(\".chartContain\");\r\n      let canvas = document.getElementById(\"canvas\");\r\n      let canvasA = document.getElementById(\"canvasA\");\r\n\r\n      // Clear Canvas Element\r\n      if (canvas !== null) {\r\n        canvas.parentNode.removeChild(canvas);\r\n        canvasA.parentNode.removeChild(canvasA);\r\n      }\r\n\r\n      // Get Container Width\r\n      this.conWidth = chartContain.offsetWidth;\r\n\r\n      // For D3 Draw Canvas\r\n      this.canvas = d3\r\n        .select(\".chartContain\")\r\n        .append(\"canvas\")\r\n        .attr(\"id\", \"canvas\")\r\n        .attr(\"class\", \"chart\")\r\n        .attr(\"width\", this.conWidth)\r\n        .attr(\"height\", this.conHeight);\r\n      // For D3 Draw Canvas Animation\r\n      this.canvasA = d3\r\n        .select(\".chartContain\")\r\n        .append(\"canvas\")\r\n        .attr(\"id\", \"canvasA\")\r\n        .attr(\"class\", \"chartA\")\r\n        .attr(\"width\", this.conWidth)\r\n        .attr(\"height\", this.conHeight);\r\n\r\n      this.ctx = this.canvas.node().getContext(\"2d\");\r\n      this.ctxA = this.canvasA.node().getContext(\"2d\");\r\n\r\n      // Set the parent of all other elements\r\n      this.customBase = document.createElement(\"custom\");\r\n      this.custom = d3.select(this.customBase);\r\n\r\n      // Data Bind\r\n      this.dataBind(this.data);\r\n    },\r\n    dataBind(data) {\r\n      let dotIndex = 0; // For dot color\r\n      let nameIndex = 0; // For Name\r\n\r\n      /*-------------------------\r\n        Y軸\r\n      -------------------------*/\r\n      this.yTick = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"axis axisY\")\r\n        .call(this.yAxis)\r\n        .selectAll(\"g.tick\");\r\n\r\n      /*-------------------------\r\n        折線\r\n      -------------------------*/\r\n      // 繪製 line\r\n      this.lines = this.custom\r\n        .selectAll(\"g.line\")\r\n        .data(this.dataArray)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", (d, i) => {\r\n          return this.color(i);\r\n        })\r\n        .attr(\"d\", d => {\r\n          return this.line(d);\r\n        });\r\n\r\n      /*-------------------------\r\n        折點\r\n      -------------------------*/\r\n      // 繪製折點 g.dot > circle.circle\r\n      this.dots = this.custom\r\n        .selectAll(\"g.dot\")\r\n        .data(data)\r\n        .enter()\r\n        .append(\"g\") // 塞好 'g'\r\n        .attr(\"class\", \"dot\") // 準備好 Class\r\n        .selectAll(\"circle.circle\")\r\n        .data(function(d) {\r\n          return d.value;\r\n        })\r\n        .enter()\r\n        .append(\"circle\") // 塞好 'circle'\r\n        .attr(\"class\", \"circle\"); // 準備好 Class\r\n\r\n      // 設置折點 Attribute\r\n      this.dots\r\n        .attr(\"cx\", (d, i) => {\r\n          return this.xScale(i + 1) + this.chartLeft;\r\n        })\r\n        .attr(\"cy\", d => {\r\n          return this.yScale(d.number) + this.chartTop;\r\n        })\r\n        .attr(\"r\", \"5\")\r\n        .attr(\"fill\", () => {\r\n          dotIndex++;\r\n          return this.color(Math.floor((dotIndex - 1) / 5));\r\n        })\r\n        .attr(\"name\", (d, i) => {\r\n          nameIndex++;\r\n          return this.data[Math.floor((nameIndex - 1) / 5)].name;\r\n        })\r\n        .attr(\"stroke\", \"#FFFFFF\");\r\n\r\n      // Draw Canvas\r\n      this.drawCanvas();\r\n    },\r\n    drawCanvas() {\r\n      let tickSize = 6; // 軸點大小\r\n      let canvasA = document.querySelector(\"#canvasA\");\r\n\r\n      // Clear Canvas\r\n      this.ctx.clearRect(0, 0, this.conWidth, this.conHeight);\r\n\r\n      /*-------------------------\r\n        X軸\r\n      -------------------------*/\r\n      // 繪製X軸點\r\n      this.ctx.beginPath();\r\n      this.data[0].value.forEach((d, i) => {\r\n        this.ctx.moveTo(\r\n          this.xScale(i + 1) + this.chartLeft,\r\n          this.chartTop + this.chartHeight\r\n        );\r\n        this.ctx.lineTo(\r\n          this.xScale(i + 1) + this.chartLeft,\r\n          this.chartTop + this.chartHeight + tickSize\r\n        );\r\n      });\r\n      this.ctx.stroke();\r\n\r\n      // 繪製X軸線\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.lineTo(\r\n        this.chartLeft + this.chartWidth,\r\n        this.chartTop + this.chartHeight\r\n      );\r\n      this.ctx.stroke();\r\n\r\n      // 繪製X軸文字\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.data[0].value.forEach((d, i) => {\r\n        this.ctx.fillText(\r\n          d.month,\r\n          this.xScale(i + 1) + this.chartLeft,\r\n          this.chartTop + this.chartHeight + tickSize\r\n        );\r\n      });\r\n\r\n      // 繪製X軸標籤\r\n      this.data.forEach((el, index) => {\r\n        // 圓點\r\n        // 開始繪製\r\n        this.ctx.save();\r\n        this.ctx.beginPath();\r\n        // 繪製點\r\n        this.ctx.arc(\r\n          this.chartLeft + index * 100,\r\n          this.chartTop + this.chartHeight + 50,\r\n          5,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        // 填色\r\n        this.ctx.fillStyle = this.color(index);\r\n        this.ctx.fill();\r\n        // 結束繪製\r\n        this.ctx.closePath();\r\n\r\n        // 文字\r\n        this.ctx.textAlign = \"left\";\r\n        this.ctx.textBaseline = \"middle\";\r\n        this.ctx.font = \"16px sans-serif\";\r\n        this.ctx.fillStyle = \"#000\";\r\n        this.ctx.fillText(\r\n          el.name,\r\n          this.chartLeft + index * 100 + 10,\r\n          this.chartTop + this.chartHeight + 50\r\n        );\r\n        this.ctx.restore();\r\n      });\r\n\r\n      /*-------------------------\r\n        Y軸\r\n      -------------------------*/\r\n      // 繪製Y軸點\r\n      this.ctx.beginPath();\r\n      // 中間內部灰線\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        // 跳過 0 的軸點\r\n        if (index === 0) return;\r\n\r\n        // 繪製軸點\r\n        this.ctx.moveTo(this.chartLeft, yPos);\r\n        this.ctx.lineTo(this.chartLeft + this.chartWidth, yPos);\r\n      });\r\n      this.ctx.strokeStyle = \"#e6e6e6\"; // 線顏色\r\n      this.ctx.stroke();\r\n      // 最上方的刻點\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft - tickSize, this.chartTop);\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop);\r\n      this.ctx.strokeStyle = \"#000\"; // 線顏色\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸線\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft, this.chartTop);\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸文字\r\n      this.ctx.textAlign = \"right\";\r\n      this.ctx.textBaseline = \"middle\";\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        this.ctx.fillText(\r\n          node.property(\"innerText\"),\r\n          this.chartLeft - tickSize,\r\n          yPos\r\n        );\r\n      });\r\n\r\n      // 繪製Y軸標籤\r\n      // start by saving the current context (current orientation, origin)\r\n      this.ctx.save();\r\n      this.ctx.translate(0, 0);\r\n      this.ctx.rotate(-Math.PI / 2);\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.ctx.font = \"16px sans-serif\";\r\n      this.ctx.fillText(\"件數\", -(this.chartTop + this.chartHeight / 2), 0);\r\n      this.ctx.restore(); // now restore the canvas flipping it back to its original orientation\r\n\r\n      /*-------------------------\r\n        動畫\r\n      -------------------------*/\r\n      this.timer = d3.timer(elapsed => {\r\n        this.animationLine(elapsed);\r\n      });\r\n\r\n      // Canvas On Mouseover\r\n      canvasA.addEventListener(\"mousemove\", e => {\r\n        this.showTooltip(e);\r\n      });\r\n    },\r\n    animationLine(elapsed) {\r\n      let duration = 500;\r\n      let t = Math.min(1, elapsed / duration); // compute how far through the animation we are (0 to 1)\r\n\r\n      // Clear Canvas\r\n      this.ctxA.clearRect(0, 0, this.conWidth, this.conHeight);\r\n\r\n      /*-------------------------\r\n        折線\r\n      -------------------------*/\r\n      this.lines.each((el, index, arr) => {\r\n        let path = document.querySelector(\"#calPath path\");\r\n        let node = d3.select(arr[index]);\r\n        let totalLength; // Path Length\r\n\r\n        path.setAttribute(\"d\", node.attr(\"d\"));\r\n        totalLength = path.getTotalLength();\r\n\r\n        this.ctxA.setLineDash([totalLength]);\r\n        this.ctxA.lineDashOffset = totalLength * (1 - t);\r\n        this.ctxA.beginPath(); // 開始繪製\r\n        this.lineCanvas(this.dataArray[index]);\r\n        this.ctxA.strokeStyle = this.color(index); // 線顏色\r\n        this.ctxA.stroke(); // 繪製線\r\n      });\r\n\r\n      /*-------------------------\r\n        折點\r\n      -------------------------*/\r\n      this.dots.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n\r\n        // 開始繪製\r\n        this.ctxA.beginPath();\r\n        // 繪製點\r\n        this.ctxA.arc(\r\n          node.attr(\"cx\"),\r\n          node.attr(\"cy\"),\r\n          Number(node.attr(\"r\")) * t,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        // 填色\r\n        this.ctxA.fillStyle = node.attr(\"fill\");\r\n        this.ctxA.fill();\r\n        // 邊框色\r\n        this.ctxA.strokeStyle = node.attr(\"stroke\");\r\n        this.ctxA.stroke();\r\n        // 結束繪製\r\n        this.ctxA.closePath();\r\n      });\r\n\r\n      // if this animation is over\r\n      if (t === 1) {\r\n        // stop this timer since we are done animating.\r\n        this.timer.stop();\r\n      }\r\n    },\r\n    randomData() {\r\n      let min = 0;\r\n      let max = 500;\r\n      let random = [\r\n        {\r\n          name: \"鼓山區\",\r\n          value: [\r\n            {\r\n              month: \"6月\",\r\n              number: \"233\"\r\n            },\r\n            {\r\n              month: \"7月\",\r\n              number: \"412\"\r\n            },\r\n            {\r\n              month: \"8月\",\r\n              number: \"533\"\r\n            },\r\n            {\r\n              month: \"9月\",\r\n              number: \"267\"\r\n            },\r\n            {\r\n              month: \"10月\",\r\n              number: \"321\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: \"左營區\",\r\n          value: [\r\n            {\r\n              month: \"6月\",\r\n              number: \"432\"\r\n            },\r\n            {\r\n              month: \"7月\",\r\n              number: \"443\"\r\n            },\r\n            {\r\n              month: \"8月\",\r\n              number: \"334\"\r\n            },\r\n            {\r\n              month: \"9月\",\r\n              number: \"233\"\r\n            },\r\n            {\r\n              month: \"10月\",\r\n              number: \"114\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: \"楠梓區\",\r\n          value: [\r\n            {\r\n              month: \"6月\",\r\n              number: \"222\"\r\n            },\r\n            {\r\n              month: \"7月\",\r\n              number: \"333\"\r\n            },\r\n            {\r\n              month: \"8月\",\r\n              number: \"441\"\r\n            },\r\n            {\r\n              month: \"9月\",\r\n              number: \"468\"\r\n            },\r\n            {\r\n              month: \"10月\",\r\n              number: \"378\"\r\n            }\r\n          ]\r\n        }\r\n      ];\r\n\r\n      // 隨機產生資料\r\n      for (let i = 0; i < 3; i++) {\r\n        random[i].value.forEach(e => {\r\n          e.number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n        });\r\n      }\r\n\r\n      this.data = random;\r\n\r\n      // Init Canvas\r\n      this.initCanvas();\r\n\r\n      // Window Resize\r\n      window.addEventListener(\"resize\", this.initCanvas);\r\n    },\r\n    showTooltip(e) {\r\n      // Correct mouse position:\r\n      let canvas = document.querySelector(\"#canvasA\");\r\n      let rect = canvas.getBoundingClientRect();\r\n      let x = e.clientX - rect.left;\r\n      let y = e.clientY - rect.top;\r\n      let mouseX = x + 20;\r\n      let mouseY = y;\r\n      let pointCircle = false;\r\n\r\n      this.dots.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n\r\n        // 開始繪製\r\n        this.ctxA.beginPath();\r\n        // 點 Path\r\n        this.ctxA.arc(\r\n          node.attr(\"cx\"),\r\n          node.attr(\"cy\"),\r\n          node.attr(\"r\"),\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        // 如果滑過點\r\n        if (this.ctxA.isPointInPath(x, y) && !pointCircle) {\r\n          // 設置位置\r\n          document\r\n            .querySelector(\".tooltip\")\r\n            .setAttribute(\"style\", `left: ${mouseX}px; top: ${mouseY}px;`);\r\n          // 插入名稱\r\n          document.querySelector(\".tooltip .name\").innerHTML = `${node.attr(\r\n            \"name\"\r\n          )} / ${el.month}`;\r\n          document.querySelector(\".tooltip .value\").innerHTML = `${\r\n            el.number\r\n          } 件`;\r\n\r\n          // Tooltip 區塊\r\n          this.hideTooltip = false;\r\n          pointCircle = true;\r\n        } else if (!this.ctxA.isPointInPath(x, y) && !pointCircle) {\r\n          this.hideTooltip = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"postcss\">\r\n.lineChart {\r\n  /* 說明 */\r\n  .detail {\r\n    color: gray;\r\n  }\r\n  .chartContain {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    #calPath {\r\n      display: none;\r\n    }\r\n    .chartA {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      z-index: 1;\r\n    }\r\n    .tooltip {\r\n      min-width: 100px;\r\n      background-color: rgba(0, 0, 0, 0.9);\r\n      color: white;\r\n      padding: 10px;\r\n      border-radius: 6px;\r\n      position: absolute;\r\n      text-align: left;\r\n      line-height: 1.5em;\r\n      z-index: 2;\r\n      &.hidden {\r\n        visibility: hidden;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/LineChart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lineChart\"},[_c('h1',[_vm._v(\"折線圖\")]),_vm._v(\" \"),_c('div',{staticClass:\"detail\"},[_vm._v(\"高雄市不動產買賣統計(104年6-10月)\")]),_vm._v(\" \"),_c('div',{staticClass:\"chartContain\"},[_c('svg',{attrs:{\"version\":\"1.1\",\"id\":\"calPath\"}},[_c('path',{attrs:{\"d\":\"\"}})]),_vm._v(\" \"),_c('div',{class:{ tooltip: true, hidden: _vm.hideTooltip}},[_c('div',{staticClass:\"name\"},[_vm._v(\"左營區 / 10月\")]),_vm._v(\" \"),_c('div',{staticClass:\"value\"},[_vm._v(\"214 件\")])])]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.randomData}},[_vm._v(\"隨機資料\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2b2f5606\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/LineChart.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2b2f5606\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./LineChart.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./LineChart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./LineChart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2b2f5606\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./LineChart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/LineChart.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"barpChart\">\r\n    <h1>橫條圖</h1>\r\n    <div class=\"detail\">高雄市鼓山區不動產買賣統計(104年)</div>\r\n    <!-- 圖表 -->\r\n    <div class=\"chartContain\">\r\n      <div :class=\"{ tooltip: true, hidden: hideTooltip}\">\r\n        <div class=\"name\">左營區 / 10月</div>\r\n        <div class=\"value\">214 件</div>\r\n      </div>\r\n    </div>\r\n    <button @click=\"randomData\">隨機資料</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [], // From randomData()\r\n      chart: {\r\n        width: 500,\r\n        height: 500,\r\n        paddingTop: 30,\r\n        paddingRight: 30,\r\n        paddingBottom: 100,\r\n        paddingLeft: 60\r\n      },\r\n      hideTooltip: true,\r\n      conWidth: 0, // Get Container Width\r\n      canvas: undefined, // For D3 Draw Canvas\r\n      ctx: undefined, // Set Canvas 2D\r\n      canvasA: undefined, // For D3 Draw Canvas Animate\r\n      ctxA: undefined, // Set Canvas 2D Animate\r\n      customBase: undefined, // This is the parent of all other elements\r\n      custom: undefined,\r\n      xTick: undefined, // X軸 tick\r\n      yTick: undefined, // Y軸 tick\r\n      bars: undefined // 繪製橫條\r\n    };\r\n  },\r\n  computed: {\r\n    // Caculate Container Height/Width Ratio\r\n    conRate() {\r\n      return (\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom) /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Container Height\r\n    conHeight() {\r\n      return this.conWidth * this.conRate;\r\n    },\r\n    // Caculate Chart Width\r\n    chartWidth() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.width /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Chart Height\r\n    chartHeight() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.height /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartTop() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.paddingTop /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartLeft() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.paddingLeft /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    valueLength() {\r\n      return this.data.value ? this.data.value.length : 0;\r\n    },\r\n    // X軸線性比例縮放\r\n    xScale() {\r\n      let Xmin = 0;\r\n      let Xmax;\r\n      let newArray = [];\r\n\r\n      this.data.value.forEach(function(e) {\r\n        newArray.push(e.number);\r\n      });\r\n      Xmax = d3.max(newArray);\r\n\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([Xmin, Xmax])\r\n        .range([0, this.chartWidth]);\r\n    },\r\n    // Y軸線性比例縮放\r\n    yScale() {\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([0, this.data.value.length + 1])\r\n        .range([this.chartHeight, 0]);\r\n    },\r\n    // X軸設定\r\n    xAxis() {\r\n      return d3.axisBottom(this.xScale).tickSizeInner(-this.chartWidth);\r\n    },\r\n    // Y軸設定\r\n    yAxis() {\r\n      let tickNum =\r\n        this.valueLength < 3 ? this.valueLength + 1 : this.valueLength;\r\n\r\n      return d3\r\n        .axisLeft(this.yScale)\r\n        .ticks(tickNum)\r\n        .tickFormat((d, i) => {\r\n          return this.yLabel[i];\r\n        });\r\n    },\r\n    // Y軸標籤文字\r\n    yLabel() {\r\n      let tickLabels = [\"\"];\r\n\r\n      this.data.value.forEach(function(e) {\r\n        tickLabels.push(e.month);\r\n      });\r\n\r\n      return tickLabels;\r\n    },\r\n    // 顏色函數\r\n    color() {\r\n      return d3.scaleOrdinal(d3.schemeCategory10);\r\n    },\r\n    barWidth() {\r\n      let gap = 20;\r\n      return this.chartHeight / (this.valueLength + 1) - gap;\r\n    }\r\n  },\r\n  mounted() {\r\n    // 隨機產生資料\r\n    this.randomData();\r\n  },\r\n  methods: {\r\n    initCanvas() {\r\n      let chartContain = document.querySelector(\".chartContain\");\r\n      let canvas = document.getElementById(\"canvas\");\r\n      let canvasA = document.getElementById(\"canvasA\");\r\n\r\n      // Clear Canvas Element\r\n      if (canvas !== null) {\r\n        canvas.parentNode.removeChild(canvas);\r\n        canvasA.parentNode.removeChild(canvasA);\r\n      }\r\n\r\n      // Get Container Width\r\n      this.conWidth = chartContain.offsetWidth;\r\n\r\n      // For D3 Draw Canvas\r\n      this.canvas = d3\r\n        .select(\".chartContain\")\r\n        .append(\"canvas\")\r\n        .attr(\"id\", \"canvas\")\r\n        .attr(\"class\", \"chart\")\r\n        .attr(\"width\", this.conWidth)\r\n        .attr(\"height\", this.conHeight);\r\n      // For D3 Draw Canvas Animation\r\n      this.canvasA = d3\r\n        .select(\".chartContain\")\r\n        .append(\"canvas\")\r\n        .attr(\"id\", \"canvasA\")\r\n        .attr(\"class\", \"chartA\")\r\n        .attr(\"width\", this.conWidth)\r\n        .attr(\"height\", this.conHeight);\r\n\r\n      this.ctx = this.canvas.node().getContext(\"2d\");\r\n      this.ctxA = this.canvasA.node().getContext(\"2d\");\r\n\r\n      // Set the parent of all other elements\r\n      this.customBase = document.createElement(\"custom\");\r\n      this.custom = d3.select(this.customBase);\r\n\r\n      // Data Bind\r\n      this.dataBind(this.data);\r\n    },\r\n    dataBind(data) {\r\n      /*-------------------------\r\n        X軸\r\n      -------------------------*/\r\n      this.xTick = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"axis axisX\")\r\n        .call(this.xAxis)\r\n        .selectAll(\"g.tick\");\r\n\r\n      /*-------------------------\r\n        Y軸\r\n      -------------------------*/\r\n      this.yTick = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"axis axisY\")\r\n        .call(this.yAxis)\r\n        .selectAll(\"g.tick\");\r\n\r\n      /*-------------------------\r\n        橫條\r\n      -------------------------*/\r\n      // 繪製 bar\r\n      this.bars = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"bars\")\r\n        .selectAll(\"rect.bar\")\r\n        .data(data.value)\r\n        .enter()\r\n        .append(\"rect\") //塞好'rect'\r\n        .attr(\"class\", \"bar\"); //準備好Class\r\n\r\n      // 設置橫條 Attribute\r\n      this.bars\r\n        .attr(\"fill\", this.color(0))\r\n        .attr(\"x\", this.chartLeft)\r\n        .attr(\"y\", (d, i) => {\r\n          return this.chartTop + this.yScale(i + 1) - this.barWidth / 2;\r\n        })\r\n        .attr(\"width\", d => {\r\n          return this.xScale(d.number);\r\n        })\r\n        .attr(\"height\", this.barWidth);\r\n\r\n      // Draw Canvas\r\n      this.drawCanvas();\r\n    },\r\n    drawCanvas() {\r\n      let tickSize = 6; // 軸點大小\r\n      let canvasA = document.querySelector(\"#canvasA\");\r\n\r\n      /*-------------------------\r\n        X軸\r\n      -------------------------*/\r\n      // 繪製X軸點\r\n      this.ctx.save();\r\n      this.ctx.beginPath();\r\n      // 中間內部灰線\r\n      this.xTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let xTrans = node.attr(\"transform\");\r\n        let xPos = Number(xTrans.split(\",\")[0].split(\"(\")[1]) + this.chartLeft;\r\n\r\n        // 跳過 0 的軸點\r\n        if (index === 0) return;\r\n\r\n        // 繪製軸點\r\n        this.ctx.moveTo(xPos, this.chartTop);\r\n        this.ctx.lineTo(xPos, this.chartTop + this.chartHeight);\r\n      });\r\n      this.ctx.setLineDash([4, 6]);\r\n      this.ctx.lineWidth = 2;\r\n      this.ctx.strokeStyle = \"#efefef\"; // 線顏色\r\n      this.ctx.stroke();\r\n      this.ctx.restore();\r\n\r\n      // 繪製X軸文字\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.xTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let xTrans = node.attr(\"transform\");\r\n        let xPos = Number(xTrans.split(\",\")[0].split(\"(\")[1]) + this.chartLeft;\r\n\r\n        this.ctx.fillText(\r\n          node.property(\"innerText\"),\r\n          xPos,\r\n          this.chartTop + this.chartHeight\r\n        );\r\n      });\r\n\r\n      // 繪製X軸標籤\r\n      this.ctx.save();\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.ctx.font = \"16px sans-serif\";\r\n      this.ctx.fillText(\r\n        \"件數\",\r\n        this.conWidth / 2,\r\n        this.chartTop + this.chartHeight + 30\r\n      );\r\n      this.ctx.restore();\r\n\r\n      /*-------------------------\r\n        Y軸\r\n      -------------------------*/\r\n      // 繪製Y軸點\r\n      this.ctx.beginPath();\r\n      // 黑色刻點\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        // 跳過 0 的軸點\r\n        if (index === 0) return;\r\n\r\n        // 繪製軸點\r\n        this.ctx.moveTo(this.chartLeft - tickSize, yPos);\r\n        this.ctx.lineTo(this.chartLeft, yPos);\r\n      });\r\n      this.ctx.stroke();\r\n      // 最下方的刻點\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(\r\n        this.chartLeft - tickSize,\r\n        this.chartTop + this.chartHeight\r\n      );\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸線\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft, this.chartTop);\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸文字\r\n      this.ctx.textAlign = \"right\";\r\n      this.ctx.textBaseline = \"middle\";\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        this.ctx.fillText(\r\n          node.property(\"innerText\"),\r\n          this.chartLeft - tickSize,\r\n          yPos\r\n        );\r\n      });\r\n\r\n      /*-------------------------\r\n        動畫\r\n      -------------------------*/\r\n      this.timer = d3.timer(elapsed => {\r\n        this.animationLine(elapsed);\r\n      });\r\n\r\n      // Canvas On Mouseover\r\n      canvasA.addEventListener(\"mousemove\", e => {\r\n        this.showTooltip(e);\r\n      });\r\n    },\r\n    animationLine(elapsed) {\r\n      let duration = 800;\r\n      let t = Math.min(1, elapsed / duration); // compute how far through the animation we are (0 to 1)\r\n\r\n      // Clear Canvas\r\n      this.ctxA.clearRect(0, 0, this.conWidth, this.conHeight);\r\n\r\n      /*-------------------------\r\n        橫條\r\n      -------------------------*/\r\n      this.bars.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n\r\n        // 開始繪製\r\n        this.ctxA.beginPath();\r\n        this.ctxA.rect(\r\n          node.attr(\"x\"),\r\n          node.attr(\"y\"),\r\n          Number(node.attr(\"width\")) * t,\r\n          node.attr(\"height\")\r\n        );\r\n        this.ctxA.globalAlpha = t;\r\n        this.ctxA.fillStyle = node.attr(\"fill\");\r\n        this.ctxA.fill();\r\n      });\r\n\r\n      /*-------------------------\r\n        橫條文字\r\n      -------------------------*/\r\n      this.ctxA.textBaseline = \"middle\";\r\n      this.ctxA.font = \"16px sans-serif\";\r\n      this.bars.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let x = Number(node.attr(\"width\")) + this.chartLeft - 5; // 修正x太低數值的文字改在橫條外顯示\r\n\r\n        // 修正x太低數值的文字改在橫條外顯示\r\n        if(x < this.chartLeft + 50) {\r\n          this.ctxA.fillStyle = \"#000\";\r\n          this.ctxA.textAlign = \"left\";\r\n          x = Number(node.attr(\"width\")) + this.chartLeft + 5;\r\n        } else {\r\n          this.ctxA.fillStyle = \"#fff\";\r\n          this.ctxA.textAlign = \"right\";\r\n        }\r\n\r\n        this.ctxA.fillText(\r\n          el.number,\r\n          x,\r\n          Number(node.attr(\"y\")) + this.barWidth / 2\r\n        );\r\n        \r\n      });\r\n\r\n      // if this animation is over\r\n      if (t === 1) {\r\n        // stop this timer since we are done animating.\r\n        this.timer.stop();\r\n      }\r\n    },\r\n    randomData() {\r\n      let min = 0;\r\n      let max = 500;\r\n      let month = Math.floor(Math.random() * (12 - 1 + 1)) + 1; // 隨機挑選連續幾個月\r\n      let random = {\r\n        name: \"鼓山區\",\r\n        value: []\r\n      };\r\n\r\n      // 隨機產生資料\r\n      for (let i = 0; i < month; i++) {\r\n        random.value.push({\r\n          month: `${i + 1}月`,\r\n          number: Math.floor(Math.random() * (max - min + 1)) + min\r\n        });\r\n      }\r\n\r\n      this.data = random;\r\n\r\n      // Init Canvas\r\n      this.initCanvas();\r\n\r\n      // Window Resize\r\n      window.addEventListener(\"resize\", this.initCanvas);\r\n    },\r\n    showTooltip(e) {\r\n      // Correct mouse position:\r\n      let canvas = document.querySelector(\"#canvasA\");\r\n      let rect = canvas.getBoundingClientRect();\r\n      let x = e.clientX - rect.left;\r\n      let y = e.clientY - rect.top;\r\n      let mouseX = x + 20;\r\n      let mouseY = y;\r\n      let pointRec = false;\r\n      \r\n      this.bars.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n\r\n        // 開始繪製\r\n        this.ctxA.beginPath();\r\n        this.ctxA.rect(\r\n          node.attr(\"x\"),\r\n          node.attr(\"y\"),\r\n          node.attr(\"width\"),\r\n          node.attr(\"height\")\r\n        );\r\n        // 如果滑過\r\n        if (this.ctxA.isPointInPath(x, y) && !pointRec) {\r\n          // 設置位置\r\n          document\r\n            .querySelector(\".tooltip\")\r\n            .setAttribute(\"style\", `left: ${mouseX}px; top: ${mouseY}px;`);\r\n          // 插入名稱\r\n          document.querySelector(\".tooltip .name\").innerHTML = `${this.data.name} / ${el.month}`;\r\n          document.querySelector(\".tooltip .value\").innerHTML = `${\r\n            el.number\r\n          } 件`;\r\n\r\n          // Tooltip 區塊\r\n          this.hideTooltip = false;\r\n          pointRec = true;\r\n        } else if (!this.ctxA.isPointInPath(x, y) && !pointRec) {\r\n          this.hideTooltip = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"postcss\">\r\n.barpChart {\r\n  /* 動畫 */\r\n  .growBarp-enter-active {\r\n    transition: all 1s;\r\n  }\r\n  .growBarp-enter {\r\n    transform: scaleX(0);\r\n    opacity: 0;\r\n  }\r\n  /* 說明 */\r\n  .detail {\r\n    color: gray;\r\n  }\r\n  /* 統計圖 */\r\n  .chartContain {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    .chartA {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      z-index: 1;\r\n    }\r\n    .tooltip {\r\n      min-width: 100px;\r\n      background-color: rgba(0, 0, 0, 0.9);\r\n      color: white;\r\n      padding: 10px;\r\n      border-radius: 6px;\r\n      position: absolute;\r\n      text-align: left;\r\n      line-height: 1.5em;\r\n      z-index: 2;\r\n      &.hidden {\r\n        visibility: hidden;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/BarPChart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"barpChart\"},[_c('h1',[_vm._v(\"橫條圖\")]),_vm._v(\" \"),_c('div',{staticClass:\"detail\"},[_vm._v(\"高雄市鼓山區不動產買賣統計(104年)\")]),_vm._v(\" \"),_c('div',{staticClass:\"chartContain\"},[_c('div',{class:{ tooltip: true, hidden: _vm.hideTooltip}},[_c('div',{staticClass:\"name\"},[_vm._v(\"左營區 / 10月\")]),_vm._v(\" \"),_c('div',{staticClass:\"value\"},[_vm._v(\"214 件\")])])]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.randomData}},[_vm._v(\"隨機資料\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3400491a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/BarPChart.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3400491a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./BarPChart.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./BarPChart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./BarPChart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3400491a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./BarPChart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/BarPChart.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"barVChart\">\r\n    <h1>直條圖</h1>\r\n    <div class=\"detail\">高雄市不動產買賣統計(104年)</div>\r\n    <!-- 圖表 -->\r\n    <div class=\"chartContain\">\r\n      <div :class=\"{ tooltip: true, hidden: hideTooltip}\">\r\n        <div class=\"name\">左營區 / 10月</div>\r\n        <div class=\"value\">214 件</div>\r\n      </div>\r\n    </div>\r\n    <button @click=\"randomData\">隨機資料</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [], // From randomData()\r\n      chart: {\r\n        width: 500,\r\n        height: 500,\r\n        paddingTop: 30,\r\n        paddingRight: 30,\r\n        paddingBottom: 100,\r\n        paddingLeft: 60,\r\n        gap: 40\r\n      },\r\n      hideTooltip: true,\r\n      conWidth: 0, // Get Container Width\r\n      canvas: undefined, // For D3 Draw Canvas\r\n      ctx: undefined, // Set Canvas 2D\r\n      canvasA: undefined, // For D3 Draw Canvas Animate\r\n      ctxA: undefined, // Set Canvas 2D Animate\r\n      customBase: undefined, // This is the parent of all other elements\r\n      custom: undefined,\r\n      xTick: undefined, // X軸 tick\r\n      yTick: undefined, // Y軸 tick\r\n      bars: undefined, // 繪製橫條\r\n      barCount: -1\r\n    };\r\n  },\r\n  computed: {\r\n    // Caculate Container Height/Width Ratio\r\n    conRate() {\r\n      return (\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom) /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Container Height\r\n    conHeight() {\r\n      return this.conWidth * this.conRate;\r\n    },\r\n    // Caculate Chart Width\r\n    chartWidth() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.width /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Chart Height\r\n    chartHeight() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.height /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartTop() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.paddingTop /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartLeft() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.paddingLeft /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    chartGap() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.gap /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    valueLength() {\r\n      return this.data[0] ? this.data[0].value.length : 0;\r\n    },\r\n    // X軸設定\r\n    xAxis() {\r\n      let tickNum =\r\n        this.valueLength < 3 ? this.valueLength + 1 : this.valueLength;\r\n\r\n      return d3\r\n        .axisBottom(this.xScale)\r\n        .ticks(tickNum)\r\n        .tickFormat((d, i) => {\r\n          return this.xLabel[i];\r\n        });\r\n    },\r\n    // Y軸設定\r\n    yAxis() {\r\n      return d3.axisLeft(this.yScale).tickSizeInner(-this.chartHeight);\r\n    },\r\n    // X軸線性比例縮放\r\n    xScale() {\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([0, this.data[0].value.length + 1])\r\n        .range([0, this.chartWidth]);\r\n    },\r\n    // Y軸線性比例縮放\r\n    yScale() {\r\n      let Ymin = 0;\r\n      let Ymax;\r\n      let newArray = [];\r\n\r\n      this.data.forEach(group => {\r\n        group.value.forEach(el => {\r\n          newArray.push(el.number);\r\n        });\r\n      });\r\n      Ymax = d3.max(newArray);\r\n\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([Ymin, Ymax])\r\n        .range([this.chartHeight, 0]);\r\n    },\r\n    // X軸標籤文字\r\n    xLabel() {\r\n      let tickLabels = [\"\"];\r\n\r\n      this.data[0].value.forEach(function(e) {\r\n        tickLabels.push(e.month);\r\n      });\r\n\r\n      return tickLabels;\r\n    },\r\n    // Y軸文字座標\r\n    axisYText() {\r\n      let x = 0 - this.chartHeight / 2;\r\n      let y = 0 - this.chartLeft;\r\n      return [x, y];\r\n    },\r\n    // 顏色函數\r\n    color() {\r\n      return d3.scaleOrdinal(d3.schemeCategory20c);\r\n    },\r\n    barWidth() {\r\n      /* --------------------\r\n      1. 把圖表寬度扣掉左右不放圖的間距\r\n         this.chartWidth / (this.valueLength + 1) * this.valueLength\r\n      2. 扣掉長條圖中間的間隔\r\n         - (this.chartGap * this.data.length)\r\n      3. 剩下的寬度分給所有長條\r\n         / (this.valueLength * this.data.length)\r\n      -------------------- */\r\n      return (\r\n        (this.chartWidth / (this.valueLength + 1) * this.valueLength -\r\n          this.chartGap * this.data.length) /\r\n        (this.valueLength * this.data.length)\r\n      );\r\n    }\r\n  },\r\n  mounted() {\r\n    // 隨機產生資料\r\n    this.randomData();\r\n  },\r\n  methods: {\r\n    initCanvas() {\r\n      let chartContain = document.querySelector(\".chartContain\");\r\n      let canvas = document.getElementById(\"canvas\");\r\n      let canvasA = document.getElementById(\"canvasA\");\r\n\r\n      // Clear Canvas Element\r\n      if (canvas !== null) {\r\n        canvas.parentNode.removeChild(canvas);\r\n        canvasA.parentNode.removeChild(canvasA);\r\n      }\r\n\r\n      // Get Container Width\r\n      this.conWidth = chartContain.offsetWidth;\r\n\r\n      // For D3 Draw Canvas\r\n      this.canvas = d3\r\n        .select(\".chartContain\")\r\n        .append(\"canvas\")\r\n        .attr(\"id\", \"canvas\")\r\n        .attr(\"class\", \"chart\")\r\n        .attr(\"width\", this.conWidth)\r\n        .attr(\"height\", this.conHeight);\r\n      // For D3 Draw Canvas Animation\r\n      this.canvasA = d3\r\n        .select(\".chartContain\")\r\n        .append(\"canvas\")\r\n        .attr(\"id\", \"canvasA\")\r\n        .attr(\"class\", \"chartA\")\r\n        .attr(\"width\", this.conWidth)\r\n        .attr(\"height\", this.conHeight);\r\n\r\n      this.ctx = this.canvas.node().getContext(\"2d\");\r\n      this.ctxA = this.canvasA.node().getContext(\"2d\");\r\n\r\n      // Set the parent of all other elements\r\n      this.customBase = document.createElement(\"custom\");\r\n      this.custom = d3.select(this.customBase);\r\n\r\n      // Data Bind\r\n      this.dataBind(this.data);\r\n    },\r\n    dataBind(data) {\r\n      /*-------------------------\r\n        X軸\r\n      -------------------------*/\r\n      this.xTick = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"axis axisX\")\r\n        .call(this.xAxis)\r\n        .selectAll(\"g.tick\");\r\n\r\n      /*-------------------------\r\n        Y軸\r\n      -------------------------*/\r\n      this.yTick = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"axis axisY\")\r\n        .call(this.yAxis)\r\n        .selectAll(\"g.tick\");\r\n\r\n      /*-------------------------\r\n        橫條\r\n      -------------------------*/\r\n      // 繪製 bar\r\n      this.bars = this.custom\r\n        .selectAll(\"g.bars\")\r\n        .data(data)\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"bars\")\r\n        .selectAll(\"rect.bar\")\r\n        .data(function(d) {\r\n          return d.value;\r\n        })\r\n        .enter()\r\n        .append(\"rect\") //塞好'rect'\r\n        .attr(\"class\", \"bar\"); //準備好Class\r\n\r\n      // 設置橫條 Attribute\r\n      this.barCount = -1; // 重置\r\n      this.bars\r\n        .attr(\"fill\", (d, i, arr) => {\r\n          this.barCount++;\r\n          return this.color(Math.floor(this.barCount / this.valueLength));\r\n        })\r\n        /* --------------------\r\n        1. 把群組直條往左推整體的一半\r\n            - this.barWidth * this.data.length / 2\r\n        2. 依個別順序向右平移\r\n            + this.barWidth * (i % this.valueLength)\r\n        -------------------- */\r\n        .attr(\"x\", (d, i) => {\r\n          this.barCount++;\r\n          return (\r\n            this.chartLeft +\r\n            this.xScale(i + 1) -\r\n            this.barWidth * this.data.length / 2 +\r\n            this.barWidth *\r\n              (Math.floor(this.barCount / this.valueLength) % this.data.length)\r\n          );\r\n        })\r\n        .attr(\"y\", d => {\r\n          return this.chartTop + this.yScale(d.number);\r\n        })\r\n        .attr(\"width\", d => {\r\n          return this.barWidth;\r\n        })\r\n        .attr(\"height\", d => {\r\n          return this.chartHeight - this.yScale(d.number);\r\n        }).attr(\"name\", (d, i) => {\r\n          this.barCount++;\r\n          return this.data[(Math.floor(this.barCount / this.valueLength) % this.data.length)].name;\r\n        });\r\n\r\n      // Draw Canvas\r\n      this.drawCanvas();\r\n    },\r\n    drawCanvas() {\r\n      let tickSize = 6; // 軸點大小\r\n      let canvasA = document.querySelector(\"#canvasA\");\r\n\r\n      /*-------------------------\r\n        X軸\r\n      -------------------------*/\r\n      // 繪製X軸點\r\n      this.ctx.beginPath();\r\n      // 黑色刻點\r\n      this.xTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let xTrans = node.attr(\"transform\");\r\n        let xPos = Number(xTrans.split(\",\")[0].split(\"(\")[1]) + this.chartLeft;\r\n\r\n        // 跳過 0 的軸點\r\n        if (index === 0) return;\r\n\r\n        // 繪製軸點\r\n        this.ctx.moveTo(xPos, this.chartTop + this.chartHeight);\r\n        this.ctx.lineTo(xPos, this.chartTop + this.chartHeight + tickSize);\r\n      });\r\n      this.ctx.stroke();\r\n\r\n      // 繪製X軸線\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.lineTo(\r\n        this.chartLeft + this.chartHeight,\r\n        this.chartTop + this.chartWidth\r\n      );\r\n      this.ctx.stroke();\r\n\r\n      // 繪製X軸文字\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.xTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let xTrans = node.attr(\"transform\");\r\n        let xPos = Number(xTrans.split(\",\")[0].split(\"(\")[1]) + this.chartLeft;\r\n\r\n        this.ctx.fillText(\r\n          node.property(\"innerText\"),\r\n          xPos,\r\n          this.chartTop + this.chartHeight + tickSize\r\n        );\r\n      });\r\n\r\n      // 繪製X軸標籤\r\n      this.data.forEach((el, index) => {\r\n        // 圓點\r\n        // 開始繪製\r\n        this.ctx.save();\r\n        this.ctx.beginPath();\r\n        // 繪製點\r\n        this.ctx.arc(\r\n          this.chartLeft + index * 100,\r\n          this.chartTop + this.chartHeight + 50,\r\n          5,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        // 填色\r\n        this.ctx.fillStyle = this.color(index);\r\n        this.ctx.fill();\r\n        // 結束繪製\r\n        this.ctx.closePath();\r\n\r\n        // 文字\r\n        this.ctx.textAlign = \"left\";\r\n        this.ctx.textBaseline = \"middle\";\r\n        this.ctx.font = \"16px sans-serif\";\r\n        this.ctx.fillStyle = \"#000\";\r\n        this.ctx.fillText(\r\n          el.name,\r\n          this.chartLeft + index * 100 + 10,\r\n          this.chartTop + this.chartHeight + 50\r\n        );\r\n        this.ctx.restore();\r\n      });\r\n\r\n      /*-------------------------\r\n        Y軸\r\n      -------------------------*/\r\n      // 繪製Y軸點\r\n      this.ctx.save();\r\n      this.ctx.beginPath();\r\n      // 內部灰色刻線\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        // 跳過 0 的軸點\r\n        if (index === 0) return;\r\n\r\n        // 繪製軸點\r\n        this.ctx.moveTo(this.chartLeft, yPos);\r\n        this.ctx.lineTo(this.chartLeft + this.chartWidth, yPos);\r\n      });\r\n      this.ctx.strokeStyle = \"#efefef\"; // 線顏色\r\n      this.ctx.stroke();\r\n      this.ctx.restore();\r\n\r\n      // 最上方的刻點\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft - tickSize, this.chartTop);\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop);\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸線\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft, this.chartTop);\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸文字\r\n      this.ctx.textAlign = \"right\";\r\n      this.ctx.textBaseline = \"middle\";\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        this.ctx.fillText(\r\n          node.property(\"innerText\"),\r\n          this.chartLeft - tickSize,\r\n          yPos\r\n        );\r\n      });\r\n\r\n      // 繪製Y軸標籤\r\n      // start by saving the current context (current orientation, origin)\r\n      this.ctx.save();\r\n      this.ctx.translate(0, 0);\r\n      this.ctx.rotate(-Math.PI / 2);\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.ctx.font = \"16px sans-serif\";\r\n      this.ctx.fillText(\"件數\", -(this.chartTop + this.chartHeight / 2), 0);\r\n      this.ctx.restore(); // now restore the canvas flipping it back to its original orientation\r\n\r\n      /*-------------------------\r\n        動畫\r\n      -------------------------*/\r\n      this.timer = d3.timer(elapsed => {\r\n        this.animationLine(elapsed);\r\n      });\r\n\r\n      // Canvas On Mouseover\r\n      canvasA.addEventListener(\"mousemove\", e => {\r\n        this.showTooltip(e);\r\n      });\r\n    },\r\n    animationLine(elapsed) {\r\n      let duration = 800;\r\n      let t = Math.min(1, elapsed / duration); // compute how far through the animation we are (0 to 1)\r\n\r\n      // Clear Canvas\r\n      this.ctxA.clearRect(0, 0, this.conWidth, this.conHeight);\r\n\r\n      /*-------------------------\r\n        直條\r\n      -------------------------*/\r\n      this.bars.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n\r\n        // 開始繪製\r\n        this.ctxA.beginPath();\r\n        this.ctxA.rect(\r\n          node.attr(\"x\"),\r\n          Number(node.attr(\"y\")) + Number(node.attr(\"height\")) * (1 - t),\r\n          node.attr(\"width\"),\r\n          Number(node.attr(\"height\")) * t\r\n        );\r\n        this.ctxA.globalAlpha = t;\r\n        this.ctxA.fillStyle = node.attr(\"fill\");\r\n        this.ctxA.fill();\r\n      });\r\n\r\n      /*-------------------------\r\n        直條文字\r\n      -------------------------*/\r\n      this.ctxA.font = \"12px sans-serif\";\r\n      this.ctxA.textBaseline = \"bottom\";\r\n      this.ctxA.textAlign = \"center\";\r\n      this.ctxA.fillStyle = \"gray\";\r\n      this.bars.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n\r\n        // 開始繪製\r\n        this.ctxA.fillText(\r\n          el.number,\r\n          Number(node.attr(\"x\")) + this.barWidth / 2,\r\n          Number(node.attr(\"y\"))\r\n        );\r\n      });\r\n\r\n      // if this animation is over\r\n      if (t === 1) {\r\n        // stop this timer since we are done animating.\r\n        this.timer.stop();\r\n      }\r\n    },\r\n    randomData() {\r\n      let min = 0;\r\n      let max = 500;\r\n      let month = Math.floor(Math.random() * (12 - 1 + 1)) + 1; // 隨機挑選連續幾個月\r\n      let random = [\r\n        {\r\n          name: \"鼓山區\",\r\n          value: []\r\n        },\r\n        {\r\n          name: \"左營區\",\r\n          value: []\r\n        },\r\n        {\r\n          name: \"楠梓區\",\r\n          value: []\r\n        }\r\n      ];\r\n\r\n      // 隨機產生資料\r\n      random.forEach(el => {\r\n        for (let i = 0; i < month; i++) {\r\n          el.value.push({\r\n            month: `${i + 1}月`,\r\n            number: Math.floor(Math.random() * (max - min + 1)) + min\r\n          });\r\n        }\r\n      });\r\n\r\n      this.data = random;\r\n\r\n      // Init Canvas\r\n      this.initCanvas();\r\n\r\n      // Window Resize\r\n      window.addEventListener(\"resize\", this.initCanvas);\r\n    },\r\n    showTooltip(e) {\r\n      // Correct mouse position:\r\n      let canvas = document.querySelector(\"#canvasA\");\r\n      let rect = canvas.getBoundingClientRect();\r\n      let x = e.clientX - rect.left;\r\n      let y = e.clientY - rect.top;\r\n      let mouseX = x + 20;\r\n      let mouseY = y;\r\n      let pointRec = false;\r\n\r\n      this.bars.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n\r\n        // 開始繪製\r\n        this.ctxA.beginPath();\r\n        this.ctxA.rect(\r\n          node.attr(\"x\"),\r\n          node.attr(\"y\"),\r\n          node.attr(\"width\"),\r\n          node.attr(\"height\")\r\n        );\r\n        // 如果滑過\r\n        if (this.ctxA.isPointInPath(x, y) && !pointRec) {\r\n          // 設置位置\r\n          document\r\n            .querySelector(\".tooltip\")\r\n            .setAttribute(\"style\", `left: ${mouseX}px; top: ${mouseY}px;`);\r\n          // 插入名稱\r\n          document.querySelector(\".tooltip .name\").innerHTML = `${node.attr(\r\n            \"name\"\r\n          )} / ${el.month}`;\r\n          document.querySelector(\".tooltip .value\").innerHTML = `${\r\n            el.number\r\n          } 件`;\r\n\r\n          // Tooltip 區塊\r\n          this.hideTooltip = false;\r\n          pointRec = true;\r\n        } else if (!this.ctxA.isPointInPath(x, y) && !pointRec) {\r\n          this.hideTooltip = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"postcss\">\r\n.barVChart {\r\n  /* 說明 */\r\n  .detail {\r\n    color: gray;\r\n  }\r\n  /* 統計圖 */\r\n  .chartContain {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    .chartA {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      z-index: 1;\r\n    }\r\n    .tooltip {\r\n      min-width: 100px;\r\n      background-color: rgba(0, 0, 0, 0.9);\r\n      color: white;\r\n      padding: 10px;\r\n      border-radius: 6px;\r\n      position: absolute;\r\n      text-align: left;\r\n      line-height: 1.5em;\r\n      z-index: 2;\r\n      &.hidden {\r\n        visibility: hidden;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/BarVChart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"barVChart\"},[_c('h1',[_vm._v(\"直條圖\")]),_vm._v(\" \"),_c('div',{staticClass:\"detail\"},[_vm._v(\"高雄市不動產買賣統計(104年)\")]),_vm._v(\" \"),_c('div',{staticClass:\"chartContain\"},[_c('div',{class:{ tooltip: true, hidden: _vm.hideTooltip}},[_c('div',{staticClass:\"name\"},[_vm._v(\"左營區 / 10月\")]),_vm._v(\" \"),_c('div',{staticClass:\"value\"},[_vm._v(\"214 件\")])])]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.randomData}},[_vm._v(\"隨機資料\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-617396ef\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/BarVChart.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-617396ef\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./BarVChart.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./BarVChart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./BarVChart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-617396ef\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./BarVChart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/BarVChart.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"donutChart\">\r\n    <h1>甜甜圈圖</h1>\r\n    <div class=\"detail\">高雄市不動產買賣統計(104年6月)</div>\r\n    <!-- 圖表 -->\r\n    <div class=\"chartContain\">\r\n      <div class=\"chartWrap\">\r\n        <svg class=\"chart\" :viewBox=\"`0 0 ${chart.outerRadius*2} ${chart.outerRadius*2}`\" preserveAspectRatio=\"xMidYMin slice\">\r\n          <!-- 執行動畫的圓圈 -->\r\n          <circle class=\"circle\"\r\n            v-for=\"(c, key) in donut\"\r\n            ref=\"circles\"\r\n            :key=\"`${key}${c.percentage}${c.offset}`\"\r\n            :r=\"radius\"\r\n            :cx=\"chart.outerRadius\"\r\n            :cy=\"chart.outerRadius\"\r\n            :stroke-width=\"chart.outerRadius - chart.innerRadius\"\r\n            :stroke-dashoffset=\"c.offset\"\r\n            :stroke=\"c.color\"\r\n            fill= \"transparent\"/>\r\n          <!-- 滑鼠滑過的區塊 -->\r\n          <g\r\n            class=\"arc\"\r\n            v-for=\"(p, key) in pie\"\r\n            :key=\"`${key}${p.d}`\"\r\n            :transform=\"`translate(${chart.outerRadius},${chart.outerRadius}) rotate(90)`\"\r\n            v-on:mouseover=\"showTooltip(key, $event)\" v-on:mouseout=\"hiddenTooltip\">\r\n            <path\r\n              fill=\"transparent\"\r\n              :d=\"p.d\">\r\n            </path>\r\n            <text\r\n              :transform=\"`translate(${p.centroid})`\"\r\n              text-anchor=\"middle\"\r\n              fill=\"white\">{{ p.percentage }}\r\n            </text>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n      <ul class=\"labelWrap\">\r\n        <li\r\n          v-for=\"(p, key) in pie\"\r\n          :key=\"`${key}${p.d}`\">\r\n          <span class=\"color\" :style=\"`background-color: ${donut[key].color};`\"></span>\r\n          <span class=\"region\">{{ data[key].name }}</span>\r\n          <span class=\"percentage\">{{ p.percentage }}</span>\r\n        </li>\r\n      </ul>\r\n      <div :class=\"{ tooltip: true, hidden: hideTooltip}\">\r\n        <div class=\"name\">左營區 / 10%</div>\r\n        <div class=\"value\">214 件</div>\r\n      </div>\r\n    </div>\r\n    <button @click=\"randomData\">隨機資料</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\n\r\n// Pie Chart Reference: https://medium.com/@heyoka/scratch-made-svg-donut-pie-charts-in-html5-2c587e935d72\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [], // From randomData()\r\n      chart: {\r\n        innerRadius: 100, // 0 for PieChart\r\n        outerRadius: 200\r\n      },\r\n      hideTooltip: true\r\n    };\r\n  },\r\n  computed: {\r\n    // Circle 半徑\r\n    radius() {\r\n      return (\r\n        this.chart.outerRadius -\r\n        (this.chart.outerRadius - this.chart.innerRadius) / 2\r\n      );\r\n    },\r\n    circum() {\r\n      // circumference = 2 * pi * radius\r\n      return 2 * Math.PI * this.radius;\r\n    },\r\n    // 顏色函數\r\n    color() {\r\n      return d3.scaleOrdinal(d3.schemeCategory20c);\r\n    },\r\n    totalSum() {\r\n      let sum = 0;\r\n\r\n      if (this.data.length) {\r\n        this.data.forEach((e, i) => {\r\n          sum = sum + e.value;\r\n        });\r\n      }\r\n\r\n      return sum;\r\n    },\r\n    donut() {\r\n      let newArray = [];\r\n      let afterPer = 0; // 把前面的 percentage 累加 (0.xxx)\r\n\r\n      if (this.data.length) {\r\n        this.data.forEach((e, i) => {\r\n          // 新增陣列\r\n          newArray.push({\r\n            percentage: e.value / this.totalSum * 100,\r\n            offset: this.circum * (1 - afterPer),\r\n            color: this.color(i)\r\n          });\r\n\r\n          // 把前面的 percentage 累加 (0.xxx)\r\n          afterPer = afterPer + e.value / this.totalSum;\r\n        });\r\n      }\r\n\r\n      return newArray;\r\n    },\r\n    pie() {\r\n      let newArray = [];\r\n      let format = d3.format(\".0%\"); // 百分比單位\r\n      let pie = d3\r\n        .pie()\r\n        .sort(null)\r\n        .value(function(d) {\r\n          return d.value;\r\n        })(this.data); // 準備好 arc 角度\r\n\r\n      if (this.data.length) {\r\n        this.data.forEach((e, i) => {\r\n          // 準備好 arc 路徑\r\n          let arc = d3\r\n            .arc()\r\n            .innerRadius(this.chart.innerRadius)\r\n            .outerRadius(this.chart.outerRadius);\r\n\r\n          // 新增陣列\r\n          newArray.push({\r\n            d: arc({\r\n              startAngle: pie[i].startAngle,\r\n              endAngle: pie[i].endAngle\r\n            }),\r\n            centroid: arc.centroid(pie[i]),\r\n            percentage: format(e.value / this.totalSum)\r\n          });\r\n        });\r\n      }\r\n\r\n      return newArray;\r\n    }\r\n  },\r\n  mounted() {\r\n    // 隨機產生資料\r\n    this.randomData();\r\n  },\r\n  methods: {\r\n    randomData() {\r\n      let min = 0;\r\n      let max = 500;\r\n      let random = [\r\n        {\r\n          name: \"鼓山區\",\r\n          value: 233\r\n        },\r\n        {\r\n          name: \"左營區\",\r\n          value: 290\r\n        },\r\n        {\r\n          name: \"楠梓區\",\r\n          value: 355\r\n        },\r\n        {\r\n          name: \"三民區\",\r\n          value: 340\r\n        },\r\n        {\r\n          name: \"苓雅區\",\r\n          value: 173\r\n        },\r\n        {\r\n          name: \"前鎮區\",\r\n          value: 199\r\n        },\r\n        {\r\n          name: \"小港區\",\r\n          value: 145\r\n        },\r\n        {\r\n          name: \"鳳山區\",\r\n          value: 394\r\n        },\r\n        {\r\n          name: \"大寮區\",\r\n          value: 151\r\n        },\r\n        {\r\n          name: \"仁武區\",\r\n          value: 139\r\n        },\r\n        {\r\n          name: \"岡山區\",\r\n          value: 107\r\n        }\r\n      ];\r\n\r\n      // 隨機砍掉區域\r\n      let newRandom = [];\r\n      random.forEach((el, index) => {\r\n        if (Math.random() >= 0.5) {\r\n          newRandom.push(el);\r\n        }\r\n      });\r\n\r\n      // 隨機產生資料\r\n      newRandom.forEach(el => {\r\n        el.value = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      });\r\n\r\n      this.data = newRandom;\r\n\r\n      // 用 js 跑展開動畫\r\n      this.$nextTick().then(() => {\r\n        // DOM updated\r\n        this.donut.forEach((el, index) => {\r\n          let totalTime = 500; // 設定時間跑 css\r\n          let stroke = this.dasharray(el.percentage);\r\n\r\n          // 起始位置\r\n          this.$refs.circles[index].style.cssText = `stroke-dasharray: 0 ${\r\n            this.circum\r\n          }; opacity: 0`;\r\n\r\n          // 設定 Interval\r\n          setTimeout(() => {\r\n            this.$refs.circles[index].style.cssText = `stroke-dasharray: ${\r\n              stroke.dash\r\n            } ${stroke.gap}; opacity: 1`;\r\n          }, totalTime);\r\n        });\r\n      });\r\n    },\r\n    dasharray(percentage) {\r\n      let dash = this.circum / 100 * percentage; // percentage%\r\n      let gap = this.circum / 100 * (100 - percentage);\r\n\r\n      return { dash: dash, gap: gap };\r\n    },\r\n    showTooltip(index, event) {\r\n      let mouseX = event.clientX + 20;\r\n      let mouseY = event.clientY;\r\n\r\n      // 設置位置\r\n      document\r\n        .querySelector(\".tooltip\")\r\n        .setAttribute(\"style\", `left: ${mouseX}px; top: ${mouseY}px;`);\r\n      // 插入名稱\r\n      document.querySelector(\".tooltip .name\").innerHTML = `${\r\n        this.data[index].name\r\n      } / ${this.pie[index].percentage}`;\r\n      document.querySelector(\".tooltip .value\").innerHTML = `${\r\n        this.data[index].value\r\n      } 件`;\r\n\r\n      // 顯示 tooltip\r\n      this.hideTooltip = false;\r\n    },\r\n    hiddenTooltip() {\r\n      this.hideTooltip = true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"postcss\">\r\n.donutChart {\r\n  /* 說明 */\r\n  .detail {\r\n    color: gray;\r\n  }\r\n  /* 統計圖 */\r\n  .chartContain {\r\n    max-width: 600px;\r\n    margin: 15px auto;\r\n    overflow: hidden;\r\n    .chartWrap {\r\n      width: 100%;\r\n      @media screen and (min-width: 600px) {\r\n        width: calc(100% - 200px);\r\n        float: left;\r\n      }\r\n      .chart {\r\n        width: 100%;\r\n        padding-bottom: 100%;\r\n        height: 1px;\r\n        overflow: visible;\r\n        transform: rotate(-90deg);\r\n        .circle {\r\n          transition: 1s;\r\n        }\r\n      }\r\n    }\r\n    ul.labelWrap {\r\n      width: 100%;\r\n      padding: 0;\r\n      overflow: hidden;\r\n      @media screen and (min-width: 600px) {\r\n        width: 150px;\r\n        padding-left: 50px;\r\n        float: right;\r\n      }\r\n      li {\r\n        list-style: none;\r\n        display: block;\r\n        overflow: hidden;\r\n        margin: 15px 10px 0 0;\r\n        float: left;\r\n        .color {\r\n          display: inline-block;\r\n          width: 10px;\r\n          height: 10px;\r\n          margin: 5px 5px 0 0;\r\n          float: left;\r\n        }\r\n        .region {\r\n          float: left;\r\n          margin-right: 10px;\r\n        }\r\n        .percentage {\r\n          float: left;\r\n          color: rgba(0, 0, 0, 0.4);\r\n        }\r\n      }\r\n    }\r\n    .tooltip {\r\n      min-width: 100px;\r\n      background-color: rgba(0, 0, 0, 0.9);\r\n      color: white;\r\n      padding: 10px;\r\n      border-radius: 6px;\r\n      position: absolute;\r\n      text-align: left;\r\n      line-height: 1.5em;\r\n      z-index: 1;\r\n      &.hidden {\r\n        visibility: hidden;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/DonutChart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"donutChart\"},[_c('h1',[_vm._v(\"甜甜圈圖\")]),_vm._v(\" \"),_c('div',{staticClass:\"detail\"},[_vm._v(\"高雄市不動產買賣統計(104年6月)\")]),_vm._v(\" \"),_c('div',{staticClass:\"chartContain\"},[_c('div',{staticClass:\"chartWrap\"},[_c('svg',{staticClass:\"chart\",attrs:{\"viewBox\":(\"0 0 \" + (_vm.chart.outerRadius*2) + \" \" + (_vm.chart.outerRadius*2)),\"preserveAspectRatio\":\"xMidYMin slice\"}},[_vm._l((_vm.donut),function(c,key){return _c('circle',{key:(\"\" + key + (c.percentage) + (c.offset)),ref:\"circles\",refInFor:true,staticClass:\"circle\",attrs:{\"r\":_vm.radius,\"cx\":_vm.chart.outerRadius,\"cy\":_vm.chart.outerRadius,\"stroke-width\":_vm.chart.outerRadius - _vm.chart.innerRadius,\"stroke-dashoffset\":c.offset,\"stroke\":c.color,\"fill\":\"transparent\"}})}),_vm._v(\" \"),_vm._l((_vm.pie),function(p,key){return _c('g',{key:(\"\" + key + (p.d)),staticClass:\"arc\",attrs:{\"transform\":(\"translate(\" + (_vm.chart.outerRadius) + \",\" + (_vm.chart.outerRadius) + \") rotate(90)\")},on:{\"mouseover\":function($event){_vm.showTooltip(key, $event)},\"mouseout\":_vm.hiddenTooltip}},[_c('path',{attrs:{\"fill\":\"transparent\",\"d\":p.d}}),_vm._v(\" \"),_c('text',{attrs:{\"transform\":(\"translate(\" + (p.centroid) + \")\"),\"text-anchor\":\"middle\",\"fill\":\"white\"}},[_vm._v(_vm._s(p.percentage)+\"\\n          \")])])})],2)]),_vm._v(\" \"),_c('ul',{staticClass:\"labelWrap\"},_vm._l((_vm.pie),function(p,key){return _c('li',{key:(\"\" + key + (p.d))},[_c('span',{staticClass:\"color\",style:((\"background-color: \" + (_vm.donut[key].color) + \";\"))}),_vm._v(\" \"),_c('span',{staticClass:\"region\"},[_vm._v(_vm._s(_vm.data[key].name))]),_vm._v(\" \"),_c('span',{staticClass:\"percentage\"},[_vm._v(_vm._s(p.percentage))])])})),_vm._v(\" \"),_c('div',{class:{ tooltip: true, hidden: _vm.hideTooltip}},[_c('div',{staticClass:\"name\"},[_vm._v(\"左營區 / 10%\")]),_vm._v(\" \"),_c('div',{staticClass:\"value\"},[_vm._v(\"214 件\")])])]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.randomData}},[_vm._v(\"隨機資料\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-f5bc0372\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/DonutChart.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f5bc0372\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DonutChart.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./DonutChart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./DonutChart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-f5bc0372\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./DonutChart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/DonutChart.vue\n// module id = null\n// module chunks = ","import 'babel-polyfill'\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport HelloWorld from '@/components/HelloWorld'\nimport LineChart from '@/components/LineChart'\nimport BarPChart from '@/components/BarPChart'\nimport BarVChart from '@/components/BarVChart'\nimport DonutChart from '@/components/DonutChart'\n\nVue.use(Router)\n\nexport default new Router({\n  mode: 'history',\n  fallback: false, // Setting this to false essentially makes every router-link navigation a full page refresh in IE9.\n  routes: [\n    {\n      path: `${ROOT_FOLDER}/`,\n      name: 'HelloWorld',\n      component: HelloWorld\n    },\n    {\n      path: `${ROOT_FOLDER}/LineChart`,\n      name: 'LineChart',\n      component: LineChart\n    },\n    {\n      path: `${ROOT_FOLDER}/BarPChart`,\n      name: 'BarPChart',\n      component: BarPChart\n    },\n    {\n      path: `${ROOT_FOLDER}/BarVChart`,\n      name: 'BarVChart',\n      component: BarVChart\n    },\n    {\n      path: `${ROOT_FOLDER}/DonutChart`,\n      name: 'DonutChart',\n      component: DonutChart\n    },\n    { path: '*', redirect: `${ROOT_FOLDER}/` }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}