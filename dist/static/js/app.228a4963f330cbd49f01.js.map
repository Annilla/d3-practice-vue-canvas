{"version":3,"sources":["webpack:///./src/App.vue?a5ed","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/components/HelloWorld.vue?9297","webpack:///./src/components/HelloWorld.vue","webpack:///src/components/LineChart.vue","webpack:///./src/components/LineChart.vue?a2c5","webpack:///./src/components/LineChart.vue","webpack:///src/components/BarPChart.vue","webpack:///./src/components/BarPChart.vue?0832","webpack:///./src/components/BarPChart.vue","webpack:///src/components/BarVChart.vue","webpack:///./src/components/BarVChart.vue?0a28","webpack:///./src/components/BarVChart.vue","webpack:///src/components/DonutChart.vue","webpack:///./src/components/DonutChart.vue?147b","webpack:///./src/components/DonutChart.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","ssrContext","components_HelloWorld","staticClass","to","name","_v","src_components_HelloWorld","HelloWorld_normalizeComponent","LineChart","undefined","chart","height","paddingTop","paddingBottom","width","paddingLeft","paddingRight","conRate","conWidth","conHeight","d3","domain","data","value","length","range","chartWidth","Ymax","number","newArray","chartHeight","array","arrayset","_this","x","d","i","chartLeft","y","chartTop","_this2","context","ctx","_this3","e","lineArray","_this4","index","month","dotArray","randomData","canvas","offsetWidth","append","attr","customBase","drawCanvas","beginPath","moveTo","_this5","xScale","lineTo","stroke","fillText","save","arc","Math","PI","fill","closePath","el","restore","custom","call","yAxis","selectAll","yPos","node","property","_this6","elapsed","_this7","drawStatic","getTotalLength","totalLength","t","color","stop","random","initCanvas","_this8","getBoundingClientRect","left","top","document","querySelector","setAttribute","mouseX","mouseY","innerHTML","components_LineChart","_vm","version","class","tooltip","hidden","hideTooltip","on","click","src_components_LineChart","LineChart_normalizeComponent","BarPChart","Xmax","tickNum","valueLength","yScale","ticks","tickFormat","tickLabels","barWidth","barArray","xAxis","xPos","components_BarPChart","src_components_BarPChart","BarPChart_normalizeComponent","BarVChart","gap","chartGap","components_BarVChart","src_components_BarVChart","BarVChart_normalizeComponent","DonutChart","outerRadius","chartOuterRadius","chartInnerRadius","sum","sort","totalSum","radius","startAngle","endAngle","theta","percentage","newRandom","components_DonutChart","_l","p","key","style","_s","src_components_DonutChart","DonutChart_normalizeComponent","vue_esm","use","vue_router_esm","router","mode","fallback","routes","path","component","redirect","config","productionTip","components","App","template"],"mappings":"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","file":"static/js/app.228a4963f330cbd49f01.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6263de80\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6263de80\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6263de80\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <!-- <img src=\"./assets/logo.png\"> -->\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('ul',[_c('li',[_c('router-link',{attrs:{\"to\":{ name: 'LineChart' }}},[_vm._v(\"折線圖\")])],1),_vm._v(\" \"),_c('li',[_c('router-link',{attrs:{\"to\":{ name: 'BarPChart' }}},[_vm._v(\"橫條圖\")])],1),_vm._v(\" \"),_c('li',[_c('router-link',{attrs:{\"to\":{ name: 'BarVChart' }}},[_vm._v(\"直條圖\")])],1),_vm._v(\" \"),_c('li',[_c('router-link',{attrs:{\"to\":{ name: 'DonutChart' }}},[_vm._v(\"甜甜圈圖\")])],1)])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4ace1661\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4ace1661\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./HelloWorld.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4ace1661\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./HelloWorld.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"lineChart\">\r\n    <h1>折線圖</h1>\r\n    <div class=\"detail\">高雄市不動產買賣統計(104年6-10月)</div>\r\n    <!-- 圖表 -->\r\n    <div class=\"chartContain\">\r\n      <svg version=\"1.1\" id=\"calPath\"><path d=\"\"></path></svg>\r\n      <div :class=\"{ tooltip: true, hidden: hideTooltip}\">\r\n        <div class=\"name\">左營區 / 10月</div>\r\n        <div class=\"value\">214 件</div>\r\n      </div>\r\n    </div>\r\n    <button @click=\"randomData\">隨機資料</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [], // From randomData()\r\n      chart: {\r\n        width: 500,\r\n        height: 500,\r\n        paddingTop: 30,\r\n        paddingRight: 30,\r\n        paddingBottom: 100,\r\n        paddingLeft: 60\r\n      },\r\n      hideTooltip: true,\r\n      conWidth: 0, // Get Container Width\r\n      canvas: undefined, // For D3 Draw Canvas\r\n      ctx: undefined, // Set Canvas 2D\r\n      customBase: undefined, // This is the parent of all other elements\r\n      custom: undefined,\r\n      yTick: undefined, // Y軸 tick\r\n      timer: undefined // For Animation Timer\r\n    };\r\n  },\r\n  computed: {\r\n    // Caculate Container Height/Width Ratio\r\n    conRate() {\r\n      return (\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom) /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Container Height\r\n    conHeight() {\r\n      return this.conWidth * this.conRate;\r\n    },\r\n    // Caculate Chart Width\r\n    chartWidth() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.width /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Chart Height\r\n    chartHeight() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.height /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartTop() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.paddingTop /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartLeft() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.paddingLeft /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // X軸線性比例縮放\r\n    xScale() {\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([0, this.data[0].value.length])\r\n        .range([0, this.chartWidth]);\r\n    },\r\n    // Y軸線性比例縮放\r\n    yScale() {\r\n      let Ymin = 0;\r\n      let Ymax;\r\n      let newArray = [];\r\n\r\n      this.data.forEach(function(e, i) {\r\n        e.value.forEach(function(ev) {\r\n          newArray.push(ev.number);\r\n        });\r\n      });\r\n      Ymax = d3.max(newArray);\r\n\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([Ymin, Ymax])\r\n        .range([this.chartHeight, 0]);\r\n    },\r\n    // Y軸設定\r\n    yAxis() {\r\n      return d3.axisLeft(this.yScale).tickSizeInner(-this.chart.height);\r\n    },\r\n    // 顏色函數\r\n    color() {\r\n      return d3.scaleOrdinal(d3.schemeCategory10);\r\n    },\r\n    // 資料轉成陣列給之後畫線用\r\n    dataArray() {\r\n      let arrayset = [];\r\n\r\n      this.data.forEach(function(e, i) {\r\n        let array = [];\r\n\r\n        e.value.forEach(function(ev) {\r\n          array.push(ev.number);\r\n        });\r\n\r\n        arrayset.push(array);\r\n      });\r\n\r\n      return arrayset;\r\n    },\r\n    // 畫線函數\r\n    line() {\r\n      return d3\r\n        .line()\r\n        .x((d, i) => {\r\n          //利用尺度運算資料索引，傳回x的位置\r\n          return this.xScale(i + 1) + this.chartLeft;\r\n        })\r\n        .y(d => {\r\n          //利用尺度運算資料的值，傳回y的位置\r\n          return this.yScale(d) + this.chartTop;\r\n        });\r\n    },\r\n    // 畫線函數 Canvas\r\n    lineCanvas() {\r\n      return d3\r\n        .line()\r\n        .x((d, i) => {\r\n          //利用尺度運算資料索引，傳回x的位置\r\n          return this.xScale(i + 1) + this.chartLeft;\r\n        })\r\n        .y(d => {\r\n          //利用尺度運算資料的值，傳回y的位置\r\n          return this.yScale(d) + this.chartTop;\r\n        })\r\n        .context(this.ctx);\r\n    },\r\n    lines() {\r\n      // 折線\r\n      let lineArray = [];\r\n\r\n      this.dataArray.forEach((e, i) => {\r\n        lineArray.push({\r\n          color: this.color(i),\r\n          d: this.line(e)\r\n        });\r\n      });\r\n\r\n      return lineArray;\r\n    },\r\n    dots() {\r\n      // 折點\r\n      let dotArray = [];\r\n\r\n      this.data.forEach((d, index) => {\r\n        d.value.forEach((e, i) => {\r\n          dotArray.push({\r\n            color: this.color(index),\r\n            cx: this.xScale(i + 1) + this.chartLeft,\r\n            cy: this.yScale(e.number) + this.chartTop,\r\n            r: 5,\r\n            name: d.name,\r\n            month: e.month,\r\n            number: e.number\r\n          });\r\n        });\r\n      });\r\n\r\n      return dotArray;\r\n    }\r\n  },\r\n  mounted() {\r\n    // 隨機產生資料\r\n    this.randomData();\r\n  },\r\n  methods: {\r\n    initCanvas() {\r\n      let chartContain = document.querySelector(\".chartContain\");\r\n      let canvas = document.getElementById(\"canvas\");\r\n\r\n      // Clear Canvas Element\r\n      if (canvas !== null) {\r\n        canvas.parentNode.removeChild(canvas);\r\n      }\r\n\r\n      // Get Container Width\r\n      this.conWidth = chartContain.offsetWidth;\r\n\r\n      // For D3 Draw Canvas\r\n      this.canvas = d3\r\n        .select(\".chartContain\")\r\n        .append(\"canvas\")\r\n        .attr(\"id\", \"canvas\")\r\n        .attr(\"class\", \"chart\")\r\n        .attr(\"width\", this.conWidth)\r\n        .attr(\"height\", this.conHeight);\r\n\r\n      this.ctx = this.canvas.node().getContext(\"2d\");\r\n\r\n      // Set the parent of all other elements\r\n      this.customBase = document.createElement(\"custom\");\r\n      this.custom = d3.select(this.customBase);\r\n\r\n      // Draw Canvas\r\n      this.drawCanvas();\r\n    },\r\n    drawStatic() { // 繪製不須動畫的元素\r\n      let tickSize = 6; // 軸點大小\r\n    \r\n      /*-------------------------\r\n        X軸\r\n      -------------------------*/\r\n      // 繪製X軸點\r\n      this.ctx.beginPath();\r\n      this.data[0].value.forEach((d, i) => {\r\n        this.ctx.moveTo(\r\n          this.xScale(i + 1) + this.chartLeft,\r\n          this.chartTop + this.chartHeight\r\n        );\r\n        this.ctx.lineTo(\r\n          this.xScale(i + 1) + this.chartLeft,\r\n          this.chartTop + this.chartHeight + tickSize\r\n        );\r\n      });\r\n      this.ctx.stroke();\r\n\r\n      // 繪製X軸線\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.lineTo(\r\n        this.chartLeft + this.chartWidth,\r\n        this.chartTop + this.chartHeight\r\n      );\r\n      this.ctx.stroke();\r\n\r\n      // 繪製X軸文字\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.data[0].value.forEach((d, i) => {\r\n        this.ctx.fillText(\r\n          d.month,\r\n          this.xScale(i + 1) + this.chartLeft,\r\n          this.chartTop + this.chartHeight + tickSize\r\n        );\r\n      });\r\n\r\n      // 繪製X軸標籤\r\n      this.data.forEach((el, index) => {\r\n        // 圓點\r\n        // 開始繪製\r\n        this.ctx.save();\r\n        this.ctx.beginPath();\r\n        // 繪製點\r\n        this.ctx.arc(\r\n          this.chartLeft + index * 100,\r\n          this.chartTop + this.chartHeight + 50,\r\n          5,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        // 填色\r\n        this.ctx.fillStyle = this.color(index);\r\n        this.ctx.fill();\r\n        // 結束繪製\r\n        this.ctx.closePath();\r\n\r\n        // 文字\r\n        this.ctx.textAlign = \"left\";\r\n        this.ctx.textBaseline = \"middle\";\r\n        this.ctx.font = \"16px sans-serif\";\r\n        this.ctx.fillStyle = \"#000\";\r\n        this.ctx.fillText(\r\n          el.name,\r\n          this.chartLeft + index * 100 + 10,\r\n          this.chartTop + this.chartHeight + 50\r\n        );\r\n        this.ctx.restore();\r\n      });\r\n\r\n      /*-------------------------\r\n        Y軸\r\n      -------------------------*/\r\n      // Y軸節點\r\n      this.yTick = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"axis axisY\")\r\n        .call(this.yAxis)\r\n        .selectAll(\"g.tick\");\r\n      \r\n      // 繪製Y軸點\r\n      this.ctx.beginPath();\r\n      // 中間內部灰線\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        // 跳過 0 的軸點\r\n        if (index === 0) return;\r\n\r\n        // 繪製軸點\r\n        this.ctx.moveTo(this.chartLeft, yPos);\r\n        this.ctx.lineTo(this.chartLeft + this.chartWidth, yPos);\r\n      });\r\n      this.ctx.strokeStyle = \"#e6e6e6\"; // 線顏色\r\n      this.ctx.stroke();\r\n      // 最上方的刻點\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft - tickSize, this.chartTop);\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop);\r\n      this.ctx.strokeStyle = \"#000\"; // 線顏色\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸線\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft, this.chartTop);\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸文字\r\n      this.ctx.textAlign = \"right\";\r\n      this.ctx.textBaseline = \"middle\";\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        this.ctx.fillText(\r\n          node.property(\"innerText\"),\r\n          this.chartLeft - tickSize,\r\n          yPos\r\n        );\r\n      });\r\n\r\n      // 繪製Y軸標籤\r\n      // start by saving the current context (current orientation, origin)\r\n      this.ctx.save();\r\n      this.ctx.translate(0, 0);\r\n      this.ctx.rotate(-Math.PI / 2);\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.ctx.font = \"16px sans-serif\";\r\n      this.ctx.fillText(\"件數\", -(this.chartTop + this.chartHeight / 2), 0);\r\n      this.ctx.restore(); // now restore the canvas flipping it back to its original orientation\r\n    },\r\n    drawCanvas() {\r\n      let canvas = document.querySelector(\"#canvas\");\r\n\r\n      /*-------------------------\r\n        動畫\r\n      -------------------------*/\r\n      this.timer = d3.timer(elapsed => {\r\n        this.animationLine(elapsed);\r\n      });\r\n\r\n      // Canvas On Mouseover\r\n      canvas.addEventListener(\"mousemove\", e => {\r\n        this.showTooltip(e);\r\n      });\r\n    },\r\n    animationLine(elapsed) {\r\n      let duration = 500;\r\n      let t = Math.min(1, elapsed / duration); // compute how far through the animation we are (0 to 1)\r\n\r\n      // Clear Canvas\r\n      this.ctx.clearRect(0, 0, this.conWidth, this.conHeight);\r\n\r\n      // 繪製不須動畫的元素\r\n      this.drawStatic();\r\n\r\n      /*-------------------------\r\n        折線\r\n      -------------------------*/\r\n      this.ctx.save();\r\n      this.lines.forEach((e, i) => {\r\n        let path = document.querySelector(\"#calPath path\");\r\n        let totalLength; // Path Length\r\n\r\n        path.setAttribute(\"d\", e.d);\r\n        totalLength = path.getTotalLength();\r\n\r\n        this.ctx.setLineDash([totalLength]);\r\n        this.ctx.lineDashOffset = totalLength * (1 - t);\r\n        this.ctx.beginPath(); // 開始繪製\r\n        this.lineCanvas(this.dataArray[i]);\r\n        this.ctx.strokeStyle = e.color; // 線顏色\r\n        this.ctx.stroke(); // 繪製線\r\n      });\r\n\r\n      /*-------------------------\r\n        折點\r\n      -------------------------*/\r\n      this.dots.forEach((e, i) => {\r\n        // 開始繪製\r\n        this.ctx.beginPath();\r\n        // 繪製點\r\n        this.ctx.arc(e.cx, e.cy, e.r * t, 0, 2 * Math.PI);\r\n        // 填色\r\n        this.ctx.fillStyle = e.color;\r\n        this.ctx.fill();\r\n        // 邊框色\r\n        this.ctx.strokeStyle = \"#fff\";\r\n        this.ctx.stroke();\r\n        // 結束繪製\r\n        this.ctx.closePath();\r\n      });\r\n      this.ctx.restore();\r\n\r\n      // if this animation is over\r\n      if (t === 1) {\r\n        // stop this timer since we are done animating.\r\n        this.timer.stop();\r\n      }\r\n    },\r\n    randomData() {\r\n      let min = 0;\r\n      let max = 500;\r\n      let random = [\r\n        {\r\n          name: \"鼓山區\",\r\n          value: [\r\n            {\r\n              month: \"6月\",\r\n              number: \"233\"\r\n            },\r\n            {\r\n              month: \"7月\",\r\n              number: \"412\"\r\n            },\r\n            {\r\n              month: \"8月\",\r\n              number: \"533\"\r\n            },\r\n            {\r\n              month: \"9月\",\r\n              number: \"267\"\r\n            },\r\n            {\r\n              month: \"10月\",\r\n              number: \"321\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: \"左營區\",\r\n          value: [\r\n            {\r\n              month: \"6月\",\r\n              number: \"432\"\r\n            },\r\n            {\r\n              month: \"7月\",\r\n              number: \"443\"\r\n            },\r\n            {\r\n              month: \"8月\",\r\n              number: \"334\"\r\n            },\r\n            {\r\n              month: \"9月\",\r\n              number: \"233\"\r\n            },\r\n            {\r\n              month: \"10月\",\r\n              number: \"114\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: \"楠梓區\",\r\n          value: [\r\n            {\r\n              month: \"6月\",\r\n              number: \"222\"\r\n            },\r\n            {\r\n              month: \"7月\",\r\n              number: \"333\"\r\n            },\r\n            {\r\n              month: \"8月\",\r\n              number: \"441\"\r\n            },\r\n            {\r\n              month: \"9月\",\r\n              number: \"468\"\r\n            },\r\n            {\r\n              month: \"10月\",\r\n              number: \"378\"\r\n            }\r\n          ]\r\n        }\r\n      ];\r\n\r\n      // 隨機產生資料\r\n      for (let i = 0; i < 3; i++) {\r\n        random[i].value.forEach(e => {\r\n          e.number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n        });\r\n      }\r\n\r\n      this.data = random;\r\n\r\n      // Init Canvas\r\n      this.initCanvas();\r\n\r\n      // Window Resize\r\n      window.addEventListener(\"resize\", this.initCanvas);\r\n    },\r\n    showTooltip(e) {\r\n      // Correct mouse position:\r\n      let canvas = document.querySelector(\"#canvas\");\r\n      let rect = canvas.getBoundingClientRect();\r\n      let x = e.clientX - rect.left;\r\n      let y = e.clientY - rect.top;\r\n      let mouseX = x + 20;\r\n      let mouseY = y;\r\n      let pointCircle = false;\r\n\r\n      this.dots.forEach((e, i) => {\r\n        // 開始繪製\r\n        this.ctx.beginPath();\r\n        // 點 Path\r\n        this.ctx.arc(e.cx, e.cy, e.r, 0, 2 * Math.PI);\r\n        // 如果滑過點\r\n        if (this.ctx.isPointInPath(x, y) && !pointCircle) {\r\n          // 設置位置\r\n          document\r\n            .querySelector(\".tooltip\")\r\n            .setAttribute(\"style\", `left: ${mouseX}px; top: ${mouseY}px;`);\r\n          // 插入名稱\r\n          document.querySelector(\".tooltip .name\").innerHTML = `${e.name} / ${\r\n            e.month\r\n          }`;\r\n          document.querySelector(\".tooltip .value\").innerHTML = `${\r\n            e.number\r\n          } 件`;\r\n\r\n          // Tooltip 區塊\r\n          this.hideTooltip = false;\r\n          pointCircle = true;\r\n        } else if (!this.ctx.isPointInPath(x, y) && !pointCircle) {\r\n          this.hideTooltip = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"postcss\">\r\n.lineChart {\r\n  /* 說明 */\r\n  .detail {\r\n    color: gray;\r\n  }\r\n  .chartContain {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    #calPath {\r\n      display: none;\r\n    }\r\n    .tooltip {\r\n      min-width: 100px;\r\n      background-color: rgba(0, 0, 0, 0.9);\r\n      color: white;\r\n      padding: 10px;\r\n      border-radius: 6px;\r\n      position: absolute;\r\n      text-align: left;\r\n      line-height: 1.5em;\r\n      z-index: 2;\r\n      &.hidden {\r\n        visibility: hidden;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/LineChart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lineChart\"},[_c('h1',[_vm._v(\"折線圖\")]),_vm._v(\" \"),_c('div',{staticClass:\"detail\"},[_vm._v(\"高雄市不動產買賣統計(104年6-10月)\")]),_vm._v(\" \"),_c('div',{staticClass:\"chartContain\"},[_c('svg',{attrs:{\"version\":\"1.1\",\"id\":\"calPath\"}},[_c('path',{attrs:{\"d\":\"\"}})]),_vm._v(\" \"),_c('div',{class:{ tooltip: true, hidden: _vm.hideTooltip}},[_c('div',{staticClass:\"name\"},[_vm._v(\"左營區 / 10月\")]),_vm._v(\" \"),_c('div',{staticClass:\"value\"},[_vm._v(\"214 件\")])])]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.randomData}},[_vm._v(\"隨機資料\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e1bd70ea\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/LineChart.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e1bd70ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./LineChart.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./LineChart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./LineChart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e1bd70ea\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./LineChart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/LineChart.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"barpChart\">\r\n    <h1>橫條圖</h1>\r\n    <div class=\"detail\">高雄市鼓山區不動產買賣統計(104年)</div>\r\n    <!-- 圖表 -->\r\n    <div class=\"chartContain\">\r\n      <div :class=\"{ tooltip: true, hidden: hideTooltip}\">\r\n        <div class=\"name\">左營區 / 10月</div>\r\n        <div class=\"value\">214 件</div>\r\n      </div>\r\n    </div>\r\n    <button @click=\"randomData\">隨機資料</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [], // From randomData()\r\n      chart: {\r\n        width: 500,\r\n        height: 500,\r\n        paddingTop: 30,\r\n        paddingRight: 30,\r\n        paddingBottom: 100,\r\n        paddingLeft: 60\r\n      },\r\n      hideTooltip: true,\r\n      conWidth: 0, // Get Container Width\r\n      canvas: undefined, // For D3 Draw Canvas\r\n      ctx: undefined, // Set Canvas 2D\r\n      customBase: undefined, // This is the parent of all other elements\r\n      custom: undefined,\r\n      xTick: undefined, // X軸 tick\r\n      yTick: undefined, // Y軸 tick\r\n      timer: undefined // For Animation Timer\r\n    };\r\n  },\r\n  computed: {\r\n    // Caculate Container Height/Width Ratio\r\n    conRate() {\r\n      return (\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom) /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Container Height\r\n    conHeight() {\r\n      return this.conWidth * this.conRate;\r\n    },\r\n    // Caculate Chart Width\r\n    chartWidth() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.width /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Chart Height\r\n    chartHeight() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.height /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartTop() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.paddingTop /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartLeft() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.paddingLeft /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    valueLength() {\r\n      return this.data.value ? this.data.value.length : 0;\r\n    },\r\n    // X軸線性比例縮放\r\n    xScale() {\r\n      let Xmin = 0;\r\n      let Xmax;\r\n      let newArray = [];\r\n\r\n      this.data.value.forEach(function(e) {\r\n        newArray.push(e.number);\r\n      });\r\n      Xmax = d3.max(newArray);\r\n\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([Xmin, Xmax])\r\n        .range([0, this.chartWidth]);\r\n    },\r\n    // Y軸線性比例縮放\r\n    yScale() {\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([0, this.data.value.length + 1])\r\n        .range([this.chartHeight, 0]);\r\n    },\r\n    // X軸設定\r\n    xAxis() {\r\n      return d3.axisBottom(this.xScale).tickSizeInner(-this.chartWidth);\r\n    },\r\n    // Y軸設定\r\n    yAxis() {\r\n      let tickNum =\r\n        this.valueLength < 3 ? this.valueLength + 1 : this.valueLength;\r\n\r\n      return d3\r\n        .axisLeft(this.yScale)\r\n        .ticks(tickNum)\r\n        .tickFormat((d, i) => {\r\n          return this.yLabel[i];\r\n        });\r\n    },\r\n    // Y軸標籤文字\r\n    yLabel() {\r\n      let tickLabels = [\"\"];\r\n\r\n      this.data.value.forEach(function(e) {\r\n        tickLabels.push(e.month);\r\n      });\r\n\r\n      return tickLabels;\r\n    },\r\n    // 顏色函數\r\n    color() {\r\n      return d3.scaleOrdinal(d3.schemeCategory10);\r\n    },\r\n    barWidth() {\r\n      let gap = 20;\r\n      return this.chartHeight / (this.valueLength + 1) - gap;\r\n    },\r\n    bars() {\r\n      // 橫條\r\n      let barArray = [];\r\n\r\n      this.data.value.forEach((e, i) => {\r\n        barArray.push({\r\n          color: this.color(0),\r\n          x: this.chartLeft,\r\n          y: this.chartTop + this.yScale(i + 1) - this.barWidth / 2,\r\n          width: this.xScale(e.number),\r\n          height: this.barWidth,\r\n          month: e.month,\r\n          number: e.number\r\n        });\r\n      });\r\n\r\n      return barArray;\r\n    }\r\n  },\r\n  mounted() {\r\n    // 隨機產生資料\r\n    this.randomData();\r\n  },\r\n  methods: {\r\n    initCanvas() {\r\n      let chartContain = document.querySelector(\".chartContain\");\r\n      let canvas = document.getElementById(\"canvas\");\r\n\r\n      // Clear Canvas Element\r\n      if (canvas !== null) {\r\n        canvas.parentNode.removeChild(canvas);\r\n      }\r\n\r\n      // Get Container Width\r\n      this.conWidth = chartContain.offsetWidth;\r\n\r\n      // For D3 Draw Canvas\r\n      this.canvas = d3\r\n        .select(\".chartContain\")\r\n        .append(\"canvas\")\r\n        .attr(\"id\", \"canvas\")\r\n        .attr(\"class\", \"chart\")\r\n        .attr(\"width\", this.conWidth)\r\n        .attr(\"height\", this.conHeight);\r\n\r\n      this.ctx = this.canvas.node().getContext(\"2d\");\r\n\r\n      // Set the parent of all other elements\r\n      this.customBase = document.createElement(\"custom\");\r\n      this.custom = d3.select(this.customBase);\r\n\r\n      // Draw Canvas\r\n      this.drawCanvas();\r\n    },\r\n    drawStatic() { // 繪製不須動畫的元素\r\n      let tickSize = 6; // 軸點大小\r\n\r\n      /*-------------------------\r\n        X軸\r\n      -------------------------*/\r\n      this.xTick = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"axis axisX\")\r\n        .call(this.xAxis)\r\n        .selectAll(\"g.tick\");\r\n      // 繪製X軸點\r\n      this.ctx.save();\r\n      this.ctx.beginPath();\r\n      // 中間內部灰線\r\n      this.xTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let xTrans = node.attr(\"transform\");\r\n        let xPos = Number(xTrans.split(\",\")[0].split(\"(\")[1]) + this.chartLeft;\r\n\r\n        // 跳過 0 的軸點\r\n        if (index === 0) return;\r\n\r\n        // 繪製軸點\r\n        this.ctx.moveTo(xPos, this.chartTop);\r\n        this.ctx.lineTo(xPos, this.chartTop + this.chartHeight);\r\n      });\r\n      this.ctx.setLineDash([4, 6]);\r\n      this.ctx.lineWidth = 2;\r\n      this.ctx.strokeStyle = \"#efefef\"; // 線顏色\r\n      this.ctx.stroke();\r\n      this.ctx.restore();\r\n\r\n      // 繪製X軸文字\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.xTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let xTrans = node.attr(\"transform\");\r\n        let xPos = Number(xTrans.split(\",\")[0].split(\"(\")[1]) + this.chartLeft;\r\n\r\n        this.ctx.fillText(\r\n          node.property(\"innerText\"),\r\n          xPos,\r\n          this.chartTop + this.chartHeight\r\n        );\r\n      });\r\n\r\n      // 繪製X軸標籤\r\n      this.ctx.save();\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.ctx.font = \"16px sans-serif\";\r\n      this.ctx.fillText(\r\n        \"件數\",\r\n        this.conWidth / 2,\r\n        this.chartTop + this.chartHeight + 30\r\n      );\r\n      this.ctx.restore();\r\n\r\n      /*-------------------------\r\n        Y軸\r\n      -------------------------*/\r\n      this.yTick = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"axis axisY\")\r\n        .call(this.yAxis)\r\n        .selectAll(\"g.tick\");\r\n      // 繪製Y軸點\r\n      this.ctx.beginPath();\r\n      // 黑色刻點\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        // 跳過 0 的軸點\r\n        if (index === 0) return;\r\n\r\n        // 繪製軸點\r\n        this.ctx.moveTo(this.chartLeft - tickSize, yPos);\r\n        this.ctx.lineTo(this.chartLeft, yPos);\r\n      });\r\n      this.ctx.stroke();\r\n      // 最下方的刻點\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(\r\n        this.chartLeft - tickSize,\r\n        this.chartTop + this.chartHeight\r\n      );\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸線\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft, this.chartTop);\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸文字\r\n      this.ctx.textAlign = \"right\";\r\n      this.ctx.textBaseline = \"middle\";\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        this.ctx.fillText(\r\n          node.property(\"innerText\"),\r\n          this.chartLeft - tickSize,\r\n          yPos\r\n        );\r\n      });\r\n    },\r\n    drawCanvas() {\r\n      let canvas = document.querySelector(\"#canvas\");\r\n\r\n      /*-------------------------\r\n        動畫\r\n      -------------------------*/\r\n      this.timer = d3.timer(elapsed => {\r\n        this.animationLine(elapsed);\r\n      });\r\n\r\n      // Canvas On Mouseover\r\n      canvas.addEventListener(\"mousemove\", e => {\r\n        this.showTooltip(e);\r\n      });\r\n    },\r\n    animationLine(elapsed) {\r\n      let duration = 800;\r\n      let t = Math.min(1, elapsed / duration); // compute how far through the animation we are (0 to 1)\r\n\r\n      // Clear Canvas\r\n      this.ctx.clearRect(0, 0, this.conWidth, this.conHeight);\r\n\r\n      // 繪製不須動畫的元素\r\n      this.drawStatic();\r\n\r\n      /*-------------------------\r\n        橫條\r\n      -------------------------*/\r\n      this.ctx.save();\r\n      this.bars.forEach((e, i) => {\r\n        // 開始繪製\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(e.x, e.y, e.width * t, e.height);\r\n        this.ctx.globalAlpha = t;\r\n        this.ctx.fillStyle = e.color;\r\n        this.ctx.fill();\r\n      });\r\n\r\n      /*-------------------------\r\n        橫條文字\r\n      -------------------------*/\r\n      this.ctx.textBaseline = \"middle\";\r\n      this.ctx.font = \"16px sans-serif\";\r\n      this.bars.forEach((e, i) => {\r\n        let x = e.width + this.chartLeft - 5; // 修正x太低數值的文字改在橫條外顯示\r\n\r\n        // 修正x太低數值的文字改在橫條外顯示\r\n        if (x < this.chartLeft + 50) {\r\n          this.ctx.fillStyle = \"#000\";\r\n          this.ctx.textAlign = \"left\";\r\n          x = e.width + this.chartLeft + 5;\r\n        } else {\r\n          this.ctx.fillStyle = \"#fff\";\r\n          this.ctx.textAlign = \"right\";\r\n        }\r\n\r\n        this.ctx.fillText(e.number, x, e.y + this.barWidth / 2);\r\n      });\r\n      this.ctx.restore();\r\n\r\n      // if this animation is over\r\n      if (t === 1) {\r\n        // stop this timer since we are done animating.\r\n        this.timer.stop();\r\n      }\r\n    },\r\n    randomData() {\r\n      let min = 0;\r\n      let max = 500;\r\n      let month = Math.floor(Math.random() * (12 - 1 + 1)) + 1; // 隨機挑選連續幾個月\r\n      let random = {\r\n        name: \"鼓山區\",\r\n        value: []\r\n      };\r\n\r\n      // 隨機產生資料\r\n      for (let i = 0; i < month; i++) {\r\n        random.value.push({\r\n          month: `${i + 1}月`,\r\n          number: Math.floor(Math.random() * (max - min + 1)) + min\r\n        });\r\n      }\r\n\r\n      this.data = random;\r\n\r\n      // Init Canvas\r\n      this.initCanvas();\r\n\r\n      // Window Resize\r\n      window.addEventListener(\"resize\", this.initCanvas);\r\n    },\r\n    showTooltip(e) {\r\n      // Correct mouse position:\r\n      let canvas = document.querySelector(\"#canvas\");\r\n      let rect = canvas.getBoundingClientRect();\r\n      let x = e.clientX - rect.left;\r\n      let y = e.clientY - rect.top;\r\n      let mouseX = x + 20;\r\n      let mouseY = y;\r\n      let pointRec = false;\r\n\r\n      this.bars.forEach((e, i) => {\r\n        // 開始繪製\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(e.x, e.y, e.width, e.height);\r\n        // 如果滑過\r\n        if (this.ctx.isPointInPath(x, y) && !pointRec) {\r\n          // 設置位置\r\n          document\r\n            .querySelector(\".tooltip\")\r\n            .setAttribute(\"style\", `left: ${mouseX}px; top: ${mouseY}px;`);\r\n          // 插入名稱\r\n          document.querySelector(\".tooltip .name\").innerHTML = `${\r\n            this.data.name\r\n          } / ${e.month}`;\r\n          document.querySelector(\".tooltip .value\").innerHTML = `${\r\n            e.number\r\n          } 件`;\r\n\r\n          // Tooltip 區塊\r\n          this.hideTooltip = false;\r\n          pointRec = true;\r\n        } else if (!this.ctx.isPointInPath(x, y) && !pointRec) {\r\n          this.hideTooltip = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"postcss\">\r\n.barpChart {\r\n  /* 動畫 */\r\n  .growBarp-enter-active {\r\n    transition: all 1s;\r\n  }\r\n  .growBarp-enter {\r\n    transform: scaleX(0);\r\n    opacity: 0;\r\n  }\r\n  /* 說明 */\r\n  .detail {\r\n    color: gray;\r\n  }\r\n  /* 統計圖 */\r\n  .chartContain {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    .tooltip {\r\n      min-width: 100px;\r\n      background-color: rgba(0, 0, 0, 0.9);\r\n      color: white;\r\n      padding: 10px;\r\n      border-radius: 6px;\r\n      position: absolute;\r\n      text-align: left;\r\n      line-height: 1.5em;\r\n      z-index: 2;\r\n      &.hidden {\r\n        visibility: hidden;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/BarPChart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"barpChart\"},[_c('h1',[_vm._v(\"橫條圖\")]),_vm._v(\" \"),_c('div',{staticClass:\"detail\"},[_vm._v(\"高雄市鼓山區不動產買賣統計(104年)\")]),_vm._v(\" \"),_c('div',{staticClass:\"chartContain\"},[_c('div',{class:{ tooltip: true, hidden: _vm.hideTooltip}},[_c('div',{staticClass:\"name\"},[_vm._v(\"左營區 / 10月\")]),_vm._v(\" \"),_c('div',{staticClass:\"value\"},[_vm._v(\"214 件\")])])]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.randomData}},[_vm._v(\"隨機資料\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-45dce3ce\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/BarPChart.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-45dce3ce\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./BarPChart.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./BarPChart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./BarPChart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-45dce3ce\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./BarPChart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/BarPChart.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"barVChart\">\r\n    <h1>直條圖</h1>\r\n    <div class=\"detail\">高雄市不動產買賣統計(104年)</div>\r\n    <!-- 圖表 -->\r\n    <div class=\"chartContain\">\r\n      <div :class=\"{ tooltip: true, hidden: hideTooltip}\">\r\n        <div class=\"name\">左營區 / 10月</div>\r\n        <div class=\"value\">214 件</div>\r\n      </div>\r\n    </div>\r\n    <button @click=\"randomData\">隨機資料</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [], // From randomData()\r\n      chart: {\r\n        width: 500,\r\n        height: 500,\r\n        paddingTop: 30,\r\n        paddingRight: 30,\r\n        paddingBottom: 100,\r\n        paddingLeft: 60,\r\n        gap: 40\r\n      },\r\n      hideTooltip: true,\r\n      conWidth: 0, // Get Container Width\r\n      canvas: undefined, // For D3 Draw Canvas\r\n      ctx: undefined, // Set Canvas 2D\r\n      customBase: undefined, // This is the parent of all other elements\r\n      custom: undefined,\r\n      xTick: undefined, // X軸 tick\r\n      yTick: undefined, // Y軸 tick\r\n      timer: undefined // For Animation Timer\r\n    };\r\n  },\r\n  computed: {\r\n    // Caculate Container Height/Width Ratio\r\n    conRate() {\r\n      return (\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom) /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Container Height\r\n    conHeight() {\r\n      return this.conWidth * this.conRate;\r\n    },\r\n    // Caculate Chart Width\r\n    chartWidth() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.width /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    // Caculate Chart Height\r\n    chartHeight() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.height /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartTop() {\r\n      return (\r\n        this.conHeight *\r\n        this.chart.paddingTop /\r\n        (this.chart.height + this.chart.paddingTop + this.chart.paddingBottom)\r\n      );\r\n    },\r\n    chartLeft() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.paddingLeft /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    chartGap() {\r\n      return (\r\n        this.conWidth *\r\n        this.chart.gap /\r\n        (this.chart.width + this.chart.paddingLeft + this.chart.paddingRight)\r\n      );\r\n    },\r\n    valueLength() {\r\n      return this.data[0] ? this.data[0].value.length : 0;\r\n    },\r\n    // X軸設定\r\n    xAxis() {\r\n      let tickNum =\r\n        this.valueLength < 3 ? this.valueLength + 1 : this.valueLength;\r\n\r\n      return d3\r\n        .axisBottom(this.xScale)\r\n        .ticks(tickNum)\r\n        .tickFormat((d, i) => {\r\n          return this.xLabel[i];\r\n        });\r\n    },\r\n    // Y軸設定\r\n    yAxis() {\r\n      return d3.axisLeft(this.yScale).tickSizeInner(-this.chartHeight);\r\n    },\r\n    // X軸線性比例縮放\r\n    xScale() {\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([0, this.data[0].value.length + 1])\r\n        .range([0, this.chartWidth]);\r\n    },\r\n    // Y軸線性比例縮放\r\n    yScale() {\r\n      let Ymin = 0;\r\n      let Ymax;\r\n      let newArray = [];\r\n\r\n      this.data.forEach(group => {\r\n        group.value.forEach(el => {\r\n          newArray.push(el.number);\r\n        });\r\n      });\r\n      Ymax = d3.max(newArray);\r\n\r\n      return d3\r\n        .scaleLinear()\r\n        .domain([Ymin, Ymax])\r\n        .range([this.chartHeight, 0]);\r\n    },\r\n    // X軸標籤文字\r\n    xLabel() {\r\n      let tickLabels = [\"\"];\r\n\r\n      this.data[0].value.forEach(function(e) {\r\n        tickLabels.push(e.month);\r\n      });\r\n\r\n      return tickLabels;\r\n    },\r\n    // Y軸文字座標\r\n    axisYText() {\r\n      let x = 0 - this.chartHeight / 2;\r\n      let y = 0 - this.chartLeft;\r\n      return [x, y];\r\n    },\r\n    // 顏色函數\r\n    color() {\r\n      return d3.scaleOrdinal(d3.schemeCategory20c);\r\n    },\r\n    barWidth() {\r\n      /* --------------------\r\n      1. 把圖表寬度扣掉左右不放圖的間距\r\n         this.chartWidth / (this.valueLength + 1) * this.valueLength\r\n      2. 扣掉長條圖中間的間隔\r\n         - (this.chartGap * this.data.length)\r\n      3. 剩下的寬度分給所有長條\r\n         / (this.valueLength * this.data.length)\r\n      -------------------- */\r\n      return (\r\n        (this.chartWidth / (this.valueLength + 1) * this.valueLength -\r\n          this.chartGap * this.data.length) /\r\n        (this.valueLength * this.data.length)\r\n      );\r\n    },\r\n    bars() {\r\n      // 直條\r\n      let barArray = [];\r\n\r\n      this.data.forEach((d, index) => {\r\n        d.value.forEach((e, i) => {\r\n          barArray.push({\r\n            color: this.color(index),\r\n            /* --------------------\r\n            1. 把群組直條往左推整體的一半\r\n                - this.barWidth * this.data.length / 2\r\n            2. 依個別順序向右平移\r\n                + this.barWidth * index\r\n            -------------------- */\r\n            x:\r\n              this.chartLeft +\r\n              this.xScale(i + 1) -\r\n              this.barWidth * this.data.length / 2 +\r\n              this.barWidth * index,\r\n            y: this.chartTop + this.yScale(e.number),\r\n            width: this.barWidth,\r\n            height: this.chartHeight - this.yScale(e.number),\r\n            name: this.data[index].name,\r\n            month: e.month,\r\n            number: e.number\r\n          });\r\n        });\r\n      });\r\n\r\n      return barArray;\r\n    }\r\n  },\r\n  mounted() {\r\n    // 隨機產生資料\r\n    this.randomData();\r\n  },\r\n  methods: {\r\n    initCanvas() {\r\n      let chartContain = document.querySelector(\".chartContain\");\r\n      let canvas = document.getElementById(\"canvas\");\r\n\r\n      // Clear Canvas Element\r\n      if (canvas !== null) {\r\n        canvas.parentNode.removeChild(canvas);\r\n      }\r\n\r\n      // Get Container Width\r\n      this.conWidth = chartContain.offsetWidth;\r\n\r\n      // For D3 Draw Canvas\r\n      this.canvas = d3\r\n        .select(\".chartContain\")\r\n        .append(\"canvas\")\r\n        .attr(\"id\", \"canvas\")\r\n        .attr(\"class\", \"chart\")\r\n        .attr(\"width\", this.conWidth)\r\n        .attr(\"height\", this.conHeight);\r\n\r\n      this.ctx = this.canvas.node().getContext(\"2d\");\r\n\r\n      // Set the parent of all other elements\r\n      this.customBase = document.createElement(\"custom\");\r\n      this.custom = d3.select(this.customBase);\r\n\r\n      // Draw Canvas\r\n      this.drawCanvas();\r\n    },\r\n    drawStatic() {\r\n      let tickSize = 6; // 軸點大小\r\n\r\n      /*-------------------------\r\n        X軸\r\n      -------------------------*/\r\n      this.xTick = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"axis axisX\")\r\n        .call(this.xAxis)\r\n        .selectAll(\"g.tick\");\r\n      // 繪製X軸點\r\n      this.ctx.beginPath();\r\n      // 黑色刻點\r\n      this.xTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let xTrans = node.attr(\"transform\");\r\n        let xPos = Number(xTrans.split(\",\")[0].split(\"(\")[1]) + this.chartLeft;\r\n\r\n        // 跳過 0 的軸點\r\n        if (index === 0) return;\r\n\r\n        // 繪製軸點\r\n        this.ctx.moveTo(xPos, this.chartTop + this.chartHeight);\r\n        this.ctx.lineTo(xPos, this.chartTop + this.chartHeight + tickSize);\r\n      });\r\n      this.ctx.stroke();\r\n\r\n      // 繪製X軸線\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.lineTo(\r\n        this.chartLeft + this.chartHeight,\r\n        this.chartTop + this.chartWidth\r\n      );\r\n      this.ctx.stroke();\r\n\r\n      // 繪製X軸文字\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.xTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let xTrans = node.attr(\"transform\");\r\n        let xPos = Number(xTrans.split(\",\")[0].split(\"(\")[1]) + this.chartLeft;\r\n\r\n        this.ctx.fillText(\r\n          node.property(\"innerText\"),\r\n          xPos,\r\n          this.chartTop + this.chartHeight + tickSize\r\n        );\r\n      });\r\n\r\n      // 繪製X軸標籤\r\n      this.data.forEach((el, index) => {\r\n        // 圓點\r\n        // 開始繪製\r\n        this.ctx.save();\r\n        this.ctx.beginPath();\r\n        // 繪製點\r\n        this.ctx.arc(\r\n          this.chartLeft + index * 100,\r\n          this.chartTop + this.chartHeight + 50,\r\n          5,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        // 填色\r\n        this.ctx.fillStyle = this.color(index);\r\n        this.ctx.fill();\r\n        // 結束繪製\r\n        this.ctx.closePath();\r\n\r\n        // 文字\r\n        this.ctx.textAlign = \"left\";\r\n        this.ctx.textBaseline = \"middle\";\r\n        this.ctx.font = \"16px sans-serif\";\r\n        this.ctx.fillStyle = \"#000\";\r\n        this.ctx.fillText(\r\n          el.name,\r\n          this.chartLeft + index * 100 + 10,\r\n          this.chartTop + this.chartHeight + 50\r\n        );\r\n        this.ctx.restore();\r\n      });\r\n\r\n      /*-------------------------\r\n        Y軸\r\n      -------------------------*/\r\n      this.yTick = this.custom\r\n        .append(\"g\")\r\n        .attr(\"class\", \"axis axisY\")\r\n        .call(this.yAxis)\r\n        .selectAll(\"g.tick\");\r\n      // 繪製Y軸點\r\n      this.ctx.save();\r\n      this.ctx.beginPath();\r\n      // 內部灰色刻線\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        // 跳過 0 的軸點\r\n        if (index === 0) return;\r\n\r\n        // 繪製軸點\r\n        this.ctx.moveTo(this.chartLeft, yPos);\r\n        this.ctx.lineTo(this.chartLeft + this.chartWidth, yPos);\r\n      });\r\n      this.ctx.strokeStyle = \"#efefef\"; // 線顏色\r\n      this.ctx.stroke();\r\n      this.ctx.restore();\r\n\r\n      // 最上方的刻點\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft - tickSize, this.chartTop);\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop);\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸線\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(this.chartLeft, this.chartTop);\r\n      this.ctx.lineTo(this.chartLeft, this.chartTop + this.chartHeight);\r\n      this.ctx.stroke();\r\n\r\n      // 繪製Y軸文字\r\n      this.ctx.textAlign = \"right\";\r\n      this.ctx.textBaseline = \"middle\";\r\n      this.yTick.each((el, index, arr) => {\r\n        let node = d3.select(arr[index]);\r\n        let yTrans = node.attr(\"transform\");\r\n        let yPos = Number(yTrans.split(\",\")[1].split(\")\")[0]) + this.chartTop;\r\n\r\n        this.ctx.fillText(\r\n          node.property(\"innerText\"),\r\n          this.chartLeft - tickSize,\r\n          yPos\r\n        );\r\n      });\r\n\r\n      // 繪製Y軸標籤\r\n      // start by saving the current context (current orientation, origin)\r\n      this.ctx.save();\r\n      this.ctx.translate(0, 0);\r\n      this.ctx.rotate(-Math.PI / 2);\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.ctx.font = \"16px sans-serif\";\r\n      this.ctx.fillText(\"件數\", -(this.chartTop + this.chartHeight / 2), 0);\r\n      this.ctx.restore(); // now restore the canvas flipping it back to its original orientation\r\n    },\r\n    drawCanvas() {\r\n      let canvas = document.querySelector(\"#canvas\");\r\n\r\n      /*-------------------------\r\n        動畫\r\n      -------------------------*/\r\n      this.timer = d3.timer(elapsed => {\r\n        this.animationLine(elapsed);\r\n      });\r\n\r\n      // Canvas On Mouseover\r\n      canvas.addEventListener(\"mousemove\", e => {\r\n        this.showTooltip(e);\r\n      });\r\n    },\r\n    animationLine(elapsed) {\r\n      let duration = 800;\r\n      let t = Math.min(1, elapsed / duration); // compute how far through the animation we are (0 to 1)\r\n\r\n      // Clear Canvas\r\n      this.ctx.clearRect(0, 0, this.conWidth, this.conHeight);\r\n\r\n      // 繪製不須動畫的元素\r\n      this.drawStatic();\r\n\r\n      /*-------------------------\r\n        直條\r\n      -------------------------*/\r\n      this.ctx.save();\r\n      this.bars.forEach((e, i) => {\r\n        // 開始繪製\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(e.x, e.y + e.height * (1 - t), e.width, e.height * t);\r\n        this.ctx.globalAlpha = t;\r\n        this.ctx.fillStyle = e.color;\r\n        this.ctx.fill();\r\n      });\r\n\r\n      /*-------------------------\r\n        直條文字\r\n      -------------------------*/\r\n      this.ctx.font = \"12px sans-serif\";\r\n      this.ctx.textBaseline = \"bottom\";\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.fillStyle = \"gray\";\r\n      this.bars.forEach((e, i) => {\r\n        // 開始繪製\r\n        this.ctx.fillText(e.number, e.x + this.barWidth / 2, e.y);\r\n      });\r\n      this.ctx.restore();\r\n\r\n      // if this animation is over\r\n      if (t === 1) {\r\n        // stop this timer since we are done animating.\r\n        this.timer.stop();\r\n      }\r\n    },\r\n    randomData() {\r\n      let min = 0;\r\n      let max = 500;\r\n      let month = Math.floor(Math.random() * (12 - 1 + 1)) + 1; // 隨機挑選連續幾個月\r\n      let random = [\r\n        {\r\n          name: \"鼓山區\",\r\n          value: []\r\n        },\r\n        {\r\n          name: \"左營區\",\r\n          value: []\r\n        },\r\n        {\r\n          name: \"楠梓區\",\r\n          value: []\r\n        }\r\n      ];\r\n\r\n      // 隨機產生資料\r\n      random.forEach(el => {\r\n        for (let i = 0; i < month; i++) {\r\n          el.value.push({\r\n            month: `${i + 1}月`,\r\n            number: Math.floor(Math.random() * (max - min + 1)) + min\r\n          });\r\n        }\r\n      });\r\n\r\n      this.data = random;\r\n\r\n      // Init Canvas\r\n      this.initCanvas();\r\n\r\n      // Window Resize\r\n      window.addEventListener(\"resize\", this.initCanvas);\r\n    },\r\n    showTooltip(e) {\r\n      // Correct mouse position:\r\n      let canvas = document.querySelector(\"#canvas\");\r\n      let rect = canvas.getBoundingClientRect();\r\n      let x = e.clientX - rect.left;\r\n      let y = e.clientY - rect.top;\r\n      let mouseX = x + 20;\r\n      let mouseY = y;\r\n      let pointRec = false;\r\n\r\n      this.bars.forEach((e, i) => {\r\n        // 開始繪製\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(e.x, e.y, e.width, e.height);\r\n        // 如果滑過\r\n        if (this.ctx.isPointInPath(x, y) && !pointRec) {\r\n          // 設置位置\r\n          document\r\n            .querySelector(\".tooltip\")\r\n            .setAttribute(\"style\", `left: ${mouseX}px; top: ${mouseY}px;`);\r\n          // 插入名稱\r\n          document.querySelector(\".tooltip .name\").innerHTML = `${e.name} / ${\r\n            e.month\r\n          }`;\r\n          document.querySelector(\".tooltip .value\").innerHTML = `${\r\n            e.number\r\n          } 件`;\r\n\r\n          // Tooltip 區塊\r\n          this.hideTooltip = false;\r\n          pointRec = true;\r\n        } else if (!this.ctx.isPointInPath(x, y) && !pointRec) {\r\n          this.hideTooltip = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"postcss\">\r\n.barVChart {\r\n  /* 說明 */\r\n  .detail {\r\n    color: gray;\r\n  }\r\n  /* 統計圖 */\r\n  .chartContain {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    .tooltip {\r\n      min-width: 100px;\r\n      background-color: rgba(0, 0, 0, 0.9);\r\n      color: white;\r\n      padding: 10px;\r\n      border-radius: 6px;\r\n      position: absolute;\r\n      text-align: left;\r\n      line-height: 1.5em;\r\n      z-index: 2;\r\n      &.hidden {\r\n        visibility: hidden;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/BarVChart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"barVChart\"},[_c('h1',[_vm._v(\"直條圖\")]),_vm._v(\" \"),_c('div',{staticClass:\"detail\"},[_vm._v(\"高雄市不動產買賣統計(104年)\")]),_vm._v(\" \"),_c('div',{staticClass:\"chartContain\"},[_c('div',{class:{ tooltip: true, hidden: _vm.hideTooltip}},[_c('div',{staticClass:\"name\"},[_vm._v(\"左營區 / 10月\")]),_vm._v(\" \"),_c('div',{staticClass:\"value\"},[_vm._v(\"214 件\")])])]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.randomData}},[_vm._v(\"隨機資料\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-346dc392\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/BarVChart.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-346dc392\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./BarVChart.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./BarVChart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./BarVChart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-346dc392\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./BarVChart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/BarVChart.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"donutChart\">\r\n    <h1>甜甜圈圖</h1>\r\n    <div class=\"detail\">高雄市不動產買賣統計(104年6月)</div>\r\n    <!-- 圖表 -->\r\n    <div class=\"chartContain\">\r\n      <div class=\"chartWrap\"></div>\r\n      <ul class=\"labelWrap\">\r\n        <li\r\n          v-for=\"(p, key) in pie\"\r\n          :key=\"`${key}${p.d}`\">\r\n          <span class=\"color\" :style=\"`background-color: ${p.color};`\"></span>\r\n          <span class=\"region\">{{ data[key].name }}</span>\r\n          <span class=\"percentage\">{{ p.percentage }}</span>\r\n        </li>\r\n      </ul>\r\n      <div :class=\"{ tooltip: true, hidden: hideTooltip}\">\r\n        <div class=\"name\">左營區 / 10%</div>\r\n        <div class=\"value\">214 件</div>\r\n      </div>\r\n    </div>\r\n    <button @click=\"randomData\">隨機資料</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [], // From randomData()\r\n      chart: {\r\n        innerRadius: 100, // 0 for PieChart\r\n        outerRadius: 200\r\n      },\r\n      hideTooltip: true,\r\n      conWidth: 0, // Get Container Width\r\n      canvas: undefined, // For D3 Draw Canvas\r\n      ctx: undefined, // Set Canvas 2D\r\n      customBase: undefined, // This is the parent of all other elements\r\n      custom: undefined,\r\n      timer: undefined // For Animation Timer\r\n    };\r\n  },\r\n  computed: {\r\n    // Caculate Container Height 正圓長寬 1:1\r\n    conHeight() {\r\n      return this.conWidth;\r\n    },\r\n    // Caculate Chart OuterRadius\r\n    chartOuterRadius() {\r\n      return this.conWidth / 2;\r\n    },\r\n    // Caculate Chart InnerRadius\r\n    chartInnerRadius() {\r\n      return this.chartOuterRadius * this.chart.innerRadius / this.chart.outerRadius;\r\n    },\r\n    // Circle 半徑\r\n    radius() {\r\n      return (\r\n        this.chartOuterRadius -\r\n        (this.chartOuterRadius - this.chartInnerRadius) / 2\r\n      );\r\n    },\r\n    // 顏色函數\r\n    color() {\r\n      return d3.scaleOrdinal(d3.schemeCategory20c);\r\n    },\r\n    totalSum() {\r\n      let sum = 0;\r\n\r\n      if (this.data.length) {\r\n        this.data.forEach((e, i) => {\r\n          sum = sum + e.value;\r\n        });\r\n      }\r\n\r\n      return sum;\r\n    },\r\n    pie() {\r\n      let newArray = [];\r\n      let format = d3.format(\".0%\"); // 百分比單位\r\n      let pie = d3\r\n        .pie()\r\n        .sort(null)\r\n        .value(function(d) {\r\n          return d.value;\r\n        })(this.data); // 準備好 arc 角度\r\n\r\n      if (this.data.length) {\r\n        this.data.forEach((e, i) => {\r\n          // 新增陣列\r\n          newArray.push({\r\n            startAngle: pie[i].startAngle - Math.PI / 2,\r\n            endAngle: pie[i].endAngle - Math.PI / 2,\r\n            percentage: format(e.value / this.totalSum),\r\n            color: this.color(i),\r\n            name: e.name,\r\n            value: e.value\r\n          });\r\n        });\r\n      }\r\n\r\n      return newArray;\r\n    }\r\n  },\r\n  mounted() {\r\n    // 隨機產生資料\r\n    this.randomData();\r\n  },\r\n  methods: {\r\n    initCanvas() {\r\n      let chartContain = document.querySelector(\".chartWrap\");\r\n      let canvas = document.getElementById(\"canvas\");\r\n\r\n      // Clear Canvas Element\r\n      if (canvas !== null) {\r\n        canvas.parentNode.removeChild(canvas);\r\n      }\r\n\r\n      // Get Container Width\r\n      this.conWidth = chartContain.offsetWidth;\r\n\r\n      // For D3 Draw Canvas\r\n      this.canvas = d3\r\n        .select(\".chartWrap\")\r\n        .append(\"canvas\")\r\n        .attr(\"id\", \"canvas\")\r\n        .attr(\"class\", \"chart\")\r\n        .attr(\"width\", this.conWidth)\r\n        .attr(\"height\", this.conHeight);\r\n\r\n      this.ctx = this.canvas.node().getContext(\"2d\");\r\n\r\n      // Set the parent of all other elements\r\n      this.customBase = document.createElement(\"custom\");\r\n      this.custom = d3.select(this.customBase);\r\n\r\n      // Draw Canvas\r\n      this.drawCanvas();\r\n    },\r\n    drawCanvas() {\r\n      let canvas = document.querySelector(\"#canvas\");\r\n\r\n      /*-------------------------\r\n        動畫\r\n      -------------------------*/\r\n      this.timer = d3.timer(elapsed => {\r\n        this.animationLine(elapsed);\r\n      });\r\n\r\n      // Canvas On Mouseover\r\n      canvas.addEventListener(\"mousemove\", e => {\r\n        this.showTooltip(e);\r\n      });\r\n    },\r\n    animationLine(elapsed) {\r\n      let duration = 700;\r\n      let t = Math.min(1, elapsed / duration); // compute how far through the animation we are (0 to 1)\r\n\r\n      // Clear Canvas\r\n      this.ctx.clearRect(0, 0, this.conWidth, this.conHeight);\r\n\r\n      /*-------------------------\r\n        甜甜圈\r\n      -------------------------*/\r\n      this.ctx.save();\r\n      this.pie.forEach((e, i) => {\r\n        // 開始繪製\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(\r\n          this.conWidth / 2,\r\n          this.conHeight / 2,\r\n          this.radius,\r\n          e.startAngle,\r\n          e.startAngle + (e.endAngle - e.startAngle) * t\r\n        );\r\n        // 邊框色\r\n        this.ctx.lineWidth = this.chartOuterRadius - this.chartInnerRadius;\r\n        this.ctx.strokeStyle = e.color;\r\n        this.ctx.globalAlpha = t;\r\n        this.ctx.stroke();\r\n      });\r\n\r\n      /*-------------------------\r\n        甜甜圈文字\r\n      -------------------------*/\r\n      this.pie.forEach((e, i) => {\r\n        let theta = e.startAngle + (e.endAngle - e.startAngle) / 2;\r\n        let x = this.radius * Math.cos(theta);\r\n        let y = this.radius * Math.sin(theta);\r\n\r\n        // 開始繪製\r\n        this.ctx.textAlign = \"center\";\r\n        this.ctx.textBaseline = \"middle\";\r\n        this.ctx.font = \"16px sans-serif\";\r\n        this.ctx.fillStyle = \"#fff\";\r\n        this.ctx.fillText(\r\n          e.percentage,\r\n          this.conWidth / 2 + x,\r\n          this.conHeight / 2 + y\r\n        );\r\n      });\r\n      this.ctx.restore();\r\n\r\n      // if this animation is over\r\n      if (t === 1) {\r\n        // stop this timer since we are done animating.\r\n        this.timer.stop();\r\n      }\r\n    },\r\n    randomData() {\r\n      let min = 0;\r\n      let max = 500;\r\n      let random = [\r\n        {\r\n          name: \"鼓山區\",\r\n          value: 233\r\n        },\r\n        {\r\n          name: \"左營區\",\r\n          value: 290\r\n        },\r\n        {\r\n          name: \"楠梓區\",\r\n          value: 355\r\n        },\r\n        {\r\n          name: \"三民區\",\r\n          value: 340\r\n        },\r\n        {\r\n          name: \"苓雅區\",\r\n          value: 173\r\n        },\r\n        {\r\n          name: \"前鎮區\",\r\n          value: 199\r\n        },\r\n        {\r\n          name: \"小港區\",\r\n          value: 145\r\n        },\r\n        {\r\n          name: \"鳳山區\",\r\n          value: 394\r\n        },\r\n        {\r\n          name: \"大寮區\",\r\n          value: 151\r\n        },\r\n        {\r\n          name: \"仁武區\",\r\n          value: 139\r\n        },\r\n        {\r\n          name: \"岡山區\",\r\n          value: 107\r\n        }\r\n      ];\r\n\r\n      // 隨機砍掉區域\r\n      let newRandom = [];\r\n      random.forEach((el, index) => {\r\n        if (Math.random() >= 0.5) {\r\n          newRandom.push(el);\r\n        }\r\n      });\r\n\r\n      // 隨機產生資料\r\n      newRandom.forEach(el => {\r\n        el.value = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      });\r\n\r\n      this.data = newRandom;\r\n\r\n      // Init Canvas\r\n      this.initCanvas();\r\n\r\n      // Window Resize\r\n      window.addEventListener(\"resize\", this.initCanvas);\r\n    },\r\n    showTooltip(e) {\r\n      // Correct mouse position:\r\n      let canvas = document.querySelector(\"#canvas\");\r\n      let rect = canvas.getBoundingClientRect();\r\n      let x = e.clientX - rect.left;\r\n      let y = e.clientY - rect.top;\r\n      let mouseX = x + 20;\r\n      let mouseY = y;\r\n      let pointCircle = false;\r\n\r\n      this.pie.forEach((e, i) => {\r\n        this.ctx.beginPath();\r\n        // 外圓弧\r\n        this.ctx.arc(\r\n          this.conWidth / 2,\r\n          this.conHeight / 2,\r\n          this.chartOuterRadius,\r\n          e.startAngle,\r\n          e.endAngle\r\n        );\r\n        // 內圓弧\r\n        this.ctx.arc(\r\n          this.conWidth / 2,\r\n          this.conHeight / 2,\r\n          this.chartInnerRadius,\r\n          e.endAngle,\r\n          e.startAngle,\r\n          true // 反時鐘連接\r\n        );\r\n        this.ctx.closePath();\r\n        // 如果滑過點\r\n        if (this.ctx.isPointInPath(x, y) && !pointCircle) {\r\n          // 設置位置\r\n          document\r\n            .querySelector(\".tooltip\")\r\n            .setAttribute(\"style\", `left: ${mouseX}px; top: ${mouseY}px;`);\r\n          // 插入名稱\r\n          document.querySelector(\".tooltip .name\").innerHTML = `${\r\n            e.name\r\n          } / 6月`;\r\n          document.querySelector(\".tooltip .value\").innerHTML = `${\r\n            e.value\r\n          } 件`;\r\n\r\n          // Tooltip 區塊\r\n          this.hideTooltip = false;\r\n          pointCircle = true;\r\n        } else if (!this.ctx.isPointInPath(x, y) && !pointCircle) {\r\n          this.hideTooltip = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"postcss\">\r\n.donutChart {\r\n  /* 說明 */\r\n  .detail {\r\n    color: gray;\r\n  }\r\n  /* 統計圖 */\r\n  .chartContain {\r\n    max-width: 600px;\r\n    margin: 15px auto;\r\n    overflow: hidden;\r\n    position: relative;\r\n    .chartWrap {\r\n      width: 100%;\r\n      position: relative;\r\n      @media screen and (min-width: 600px) {\r\n        width: calc(100% - 200px);\r\n        float: left;\r\n      }\r\n    }\r\n    ul.labelWrap {\r\n      width: 100%;\r\n      padding: 0;\r\n      overflow: hidden;\r\n      @media screen and (min-width: 600px) {\r\n        width: 150px;\r\n        padding-left: 50px;\r\n        float: right;\r\n      }\r\n      li {\r\n        list-style: none;\r\n        display: block;\r\n        overflow: hidden;\r\n        margin: 15px 10px 0 0;\r\n        float: left;\r\n        .color {\r\n          display: inline-block;\r\n          width: 10px;\r\n          height: 10px;\r\n          margin: 5px 5px 0 0;\r\n          float: left;\r\n        }\r\n        .region {\r\n          float: left;\r\n          margin-right: 10px;\r\n        }\r\n        .percentage {\r\n          float: left;\r\n          color: rgba(0, 0, 0, 0.4);\r\n        }\r\n      }\r\n    }\r\n    .tooltip {\r\n      min-width: 100px;\r\n      background-color: rgba(0, 0, 0, 0.9);\r\n      color: white;\r\n      padding: 10px;\r\n      border-radius: 6px;\r\n      position: absolute;\r\n      text-align: left;\r\n      line-height: 1.5em;\r\n      z-index: 2;\r\n      &.hidden {\r\n        visibility: hidden;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/DonutChart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"donutChart\"},[_c('h1',[_vm._v(\"甜甜圈圖\")]),_vm._v(\" \"),_c('div',{staticClass:\"detail\"},[_vm._v(\"高雄市不動產買賣統計(104年6月)\")]),_vm._v(\" \"),_c('div',{staticClass:\"chartContain\"},[_c('div',{staticClass:\"chartWrap\"}),_vm._v(\" \"),_c('ul',{staticClass:\"labelWrap\"},_vm._l((_vm.pie),function(p,key){return _c('li',{key:(\"\" + key + (p.d))},[_c('span',{staticClass:\"color\",style:((\"background-color: \" + (p.color) + \";\"))}),_vm._v(\" \"),_c('span',{staticClass:\"region\"},[_vm._v(_vm._s(_vm.data[key].name))]),_vm._v(\" \"),_c('span',{staticClass:\"percentage\"},[_vm._v(_vm._s(p.percentage))])])})),_vm._v(\" \"),_c('div',{class:{ tooltip: true, hidden: _vm.hideTooltip}},[_c('div',{staticClass:\"name\"},[_vm._v(\"左營區 / 10%\")]),_vm._v(\" \"),_c('div',{staticClass:\"value\"},[_vm._v(\"214 件\")])])]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.randomData}},[_vm._v(\"隨機資料\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1c14891f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/DonutChart.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1c14891f\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DonutChart.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./DonutChart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./DonutChart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1c14891f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./DonutChart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/DonutChart.vue\n// module id = null\n// module chunks = ","import 'babel-polyfill'\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport HelloWorld from '@/components/HelloWorld'\nimport LineChart from '@/components/LineChart'\nimport BarPChart from '@/components/BarPChart'\nimport BarVChart from '@/components/BarVChart'\nimport DonutChart from '@/components/DonutChart'\n\nVue.use(Router)\n\nexport default new Router({\n  mode: 'history',\n  fallback: false, // Setting this to false essentially makes every router-link navigation a full page refresh in IE9.\n  routes: [\n    {\n      path: `${ROOT_FOLDER}/`,\n      name: 'HelloWorld',\n      component: HelloWorld\n    },\n    {\n      path: `${ROOT_FOLDER}/LineChart`,\n      name: 'LineChart',\n      component: LineChart\n    },\n    {\n      path: `${ROOT_FOLDER}/BarPChart`,\n      name: 'BarPChart',\n      component: BarPChart\n    },\n    {\n      path: `${ROOT_FOLDER}/BarVChart`,\n      name: 'BarVChart',\n      component: BarVChart\n    },\n    {\n      path: `${ROOT_FOLDER}/DonutChart`,\n      name: 'DonutChart',\n      component: DonutChart\n    },\n    { path: '*', redirect: `${ROOT_FOLDER}/` }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}